var annotated_dup =
[
    [ "accessor_type", "structaccessor__type.html", "structaccessor__type" ],
    [ "attribute_interface", "structattribute__interface__type.html", "structattribute__interface__type" ],
    [ "bucket", "structbucket__type.html", "structbucket__type" ],
    [ "class_interface", "structclass__interface__type.html", "structclass__interface__type" ],
    [ "detour_interface", "structdetour__interface__type.html", "structdetour__interface__type" ],
    [ "dynlink_impl_interface", "structdynlink__impl__interface__type.html", "structdynlink__impl__interface__type" ],
    [ "dynlink_symbol_addr_beos", "structdynlink__symbol__addr__beos__type.html", "structdynlink__symbol__addr__beos__type" ],
    [ "dynlink_symbol_addr_macos", "structdynlink__symbol__addr__macos__type.html", "structdynlink__symbol__addr__macos__type" ],
    [ "dynlink_symbol_addr_unix", "structdynlink__symbol__addr__unix__type.html", "structdynlink__symbol__addr__unix__type" ],
    [ "function_interface", "structfunction__interface__type.html", "structfunction__interface__type" ],
    [ "future_interface", "structfuture__interface__type.html", "structfuture__interface__type" ],
    [ "loader_impl_interface", "structloader__impl__interface__type.html", "structloader__impl__interface__type" ],
    [ "loader_initialization_order", "structloader__initialization__order__type.html", "structloader__initialization__order__type" ],
    [ "loader_manager_impl", "structloader__manager__impl__type.html", "structloader__manager__impl__type" ],
    [ "log_aspect_format_impl", "structlog__aspect__format__impl__type.html", "structlog__aspect__format__impl__type" ],
    [ "log_aspect_interface", "structlog__aspect__interface__type.html", "structlog__aspect__interface__type" ],
    [ "log_aspect_schedule_impl", "structlog__aspect__schedule__impl__type.html", "structlog__aspect__schedule__impl__type" ],
    [ "log_aspect_storage_impl", "structlog__aspect__storage__impl__type.html", "structlog__aspect__storage__impl__type" ],
    [ "log_aspect_stream_impl", "structlog__aspect__stream__impl__type.html", "structlog__aspect__stream__impl__type" ],
    [ "log_policy_format_custom_ctor", "structlog__policy__format__custom__ctor__type.html", "structlog__policy__format__custom__ctor__type" ],
    [ "log_policy_format_custom_va_list", "structlog__policy__format__custom__va__list__type.html", "structlog__policy__format__custom__va__list__type" ],
    [ "log_policy_format_impl", "structlog__policy__format__impl__type.html", "structlog__policy__format__impl__type" ],
    [ "log_policy_format_text_ctor", "structlog__policy__format__text__ctor__type.html", "structlog__policy__format__text__ctor__type" ],
    [ "log_policy_interface", "structlog__policy__interface__type.html", "structlog__policy__interface__type" ],
    [ "log_policy_schedule_impl", "structlog__policy__schedule__impl__type.html", "structlog__policy__schedule__impl__type" ],
    [ "log_policy_storage_batch_ctor", "structlog__policy__storage__batch__ctor__type.html", "structlog__policy__storage__batch__ctor__type" ],
    [ "log_policy_storage_impl", "structlog__policy__storage__impl__type.html", "structlog__policy__storage__impl__type" ],
    [ "log_policy_stream_custom_ctor", "structlog__policy__stream__custom__ctor__type.html", "structlog__policy__stream__custom__ctor__type" ],
    [ "log_policy_stream_file_ctor", "structlog__policy__stream__file__ctor__type.html", "structlog__policy__stream__file__ctor__type" ],
    [ "log_policy_stream_impl", "structlog__policy__stream__impl__type.html", "structlog__policy__stream__impl__type" ],
    [ "log_policy_stream_nginx_ctor", "structlog__policy__stream__nginx__ctor__type.html", "structlog__policy__stream__nginx__ctor__type" ],
    [ "log_policy_stream_socket_ctor", "structlog__policy__stream__socket__ctor__type.html", "structlog__policy__stream__socket__ctor__type" ],
    [ "log_policy_stream_stdio_ctor", "structlog__policy__stream__stdio__ctor__type.html", "structlog__policy__stream__stdio__ctor__type" ],
    [ "log_policy_stream_syslog_ctor", "structlog__policy__stream__syslog__ctor__type.html", "structlog__policy__stream__syslog__ctor__type" ],
    [ "log_record_ctor", "structlog__record__ctor__type.html", "structlog__record__ctor__type" ],
    [ "log_record_va_list_type", "structlog__record__va__list__type.html", "structlog__record__va__list__type" ],
    [ "metacall_allocator_nginx", "structmetacall__allocator__nginx__type.html", "structmetacall__allocator__nginx__type" ],
    [ "metacall_allocator_std", "structmetacall__allocator__std__type.html", "structmetacall__allocator__std__type" ],
    [ "metacall_await_callbacks", "structmetacall__await__callbacks.html", "structmetacall__await__callbacks" ],
    [ "metacall_exception", "structmetacall__exception__type.html", "structmetacall__exception__type" ],
    [ "metacall_initialize_configuration_type", "structmetacall__initialize__configuration__type.html", "structmetacall__initialize__configuration__type" ],
    [ "metacall_log_custom", "structmetacall__log__custom__type.html", "structmetacall__log__custom__type" ],
    [ "metacall_log_custom_va_list", "structmetacall__log__custom__va__list__type.html", "structmetacall__log__custom__va__list__type" ],
    [ "metacall_log_file", "structmetacall__log__file__type.html", "structmetacall__log__file__type" ],
    [ "metacall_log_nginx", "structmetacall__log__nginx__type.html", "structmetacall__log__nginx__type" ],
    [ "metacall_log_socket", "structmetacall__log__socket__type.html", "structmetacall__log__socket__type" ],
    [ "metacall_log_stdio", "structmetacall__log__stdio__type.html", "structmetacall__log__stdio__type" ],
    [ "metacall_log_syslog", "structmetacall__log__syslog__type.html", "structmetacall__log__syslog__type" ],
    [ "metacall_version_type", "structmetacall__version__type.html", "structmetacall__version__type" ],
    [ "method_interface", "structmethod__interface__type.html", "structmethod__interface__type" ],
    [ "object_interface", "structobject__interface__type.html", "structobject__interface__type" ],
    [ "pair", "structpair__type.html", "structpair__type" ],
    [ "plugin_descriptor", "structplugin__descriptor__type.html", "structplugin__descriptor__type" ],
    [ "plugin_manager", "structplugin__manager__type.html", "structplugin__manager__type" ],
    [ "plugin_manager_interface", "structplugin__manager__interface__type.html", "structplugin__manager__interface__type" ],
    [ "type_interface", "structtype__interface__type.html", "structtype__interface__type" ]
];
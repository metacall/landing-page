<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_plugin__interface_8hpp" xml:lang="en-US">
<title>plugin_interface.hpp File Reference</title>
<indexterm><primary>plugin_interface.hpp</primary></indexterm>
<programlisting>#include &lt;preprocessor/preprocessor.h&gt;
#include &lt;log/log.h&gt;
#include &lt;reflect/reflect.h&gt;
#include &lt;metacall/metacall.h&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;
</programlisting>Include dependency graph for plugin_interface.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="plugin__interface_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1a91ac28c5c492c0c0c1a986bb50874f48">EXTENSION_FUNCTION_IMPL_VOID</link>(ret,  name)</para>
</listitem>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1a6c17abaed3d41e86f7ba99664e6c82c3">EXTENSION_FUNCTION_IMPL</link>(ret,  name, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1a29a08a341120da17f5a5f8dfc8bc4385">EXTENSION_FUNCTION</link>(ret,  name, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1a879122e13eac227389dac9ee5a3547f4">EXTENSION_FUNCTION_THROW</link>(error)</para>
</listitem>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1a41efb02583af86433ef503cb35cdb8c7">EXTENSION_FUNCTION_CHECK_ITERATOR</link>(error,  iterator,  <link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_plugin__interface_8hpp_1ae1652160f9ac24ba069540788d87de27">EXTENSION_FUNCTION_CHECK</link>(error, ...)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_plugin__interface_8hpp_1a91ac28c5c492c0c0c1a986bb50874f48"/>    <section>
    <title>EXTENSION_FUNCTION_IMPL_VOID</title>
<indexterm><primary>EXTENSION_FUNCTION_IMPL_VOID</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION_IMPL_VOID</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION_IMPL_VOID( ret,  name)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;\
&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(<link linkend="_metacall_8h_1a4d4b136ce9d1890593050e544f8bd59f">metacall_register_loaderv</link>(<link linkend="_loader_8h_1ae460ed5a03319c8ef3c08f3cd7ecc9d5">loader</link>,&#32;handle,&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(name),&#32;name,&#32;ret,&#32;0,&#32;NULL)&#32;!=&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;log_write(<emphasis role="stringliteral">&quot;metacall&quot;</emphasis>,&#32;<link linkend="_log__level_8h_1ab2136fe4c31ef76f47cf6bb67b2f6bdaa5b40f003febbc3b535649d63f4b8a44f">LOG_LEVEL_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;register&#32;function:&#32;&quot;</emphasis>&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(name));&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;1;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(0)
</programlisting>    </section><anchor xml:id="_plugin__interface_8hpp_1a6c17abaed3d41e86f7ba99664e6c82c3"/>    <section>
    <title>EXTENSION_FUNCTION_IMPL</title>
<indexterm><primary>EXTENSION_FUNCTION_IMPL</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION_IMPL</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION_IMPL( ret,  name,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;\
&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enum&#32;<link linkend="_metacall__value_8h_1a09df370b94fa034a58dc8048e14ed34d">metacall_value_id</link>&#32;arg_types[]&#32;=&#32;{&#32;__VA_ARGS__&#32;};&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(<link linkend="_metacall_8h_1a4d4b136ce9d1890593050e544f8bd59f">metacall_register_loaderv</link>(<link linkend="_loader_8h_1ae460ed5a03319c8ef3c08f3cd7ecc9d5">loader</link>,&#32;handle,&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(name),&#32;name,&#32;ret,&#32;PREPROCESSOR_ARGS_COUNT(__VA_ARGS__),&#32;arg_types)&#32;!=&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;log_write(<emphasis role="stringliteral">&quot;metacall&quot;</emphasis>,&#32;<link linkend="_log__level_8h_1ab2136fe4c31ef76f47cf6bb67b2f6bdaa5b40f003febbc3b535649d63f4b8a44f">LOG_LEVEL_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;register&#32;function:&#32;&quot;</emphasis>&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(name));&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;1;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(0)
</programlisting>    </section><anchor xml:id="_plugin__interface_8hpp_1a29a08a341120da17f5a5f8dfc8bc4385"/>    <section>
    <title>EXTENSION_FUNCTION</title>
<indexterm><primary>EXTENSION_FUNCTION</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION( ret,  name,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_preprocessor__if_8h_1aec1ff7c94271c1198ca5a2c2d3ff75a9">PREPROCESSOR_IF</link>(<link linkend="_preprocessor__arguments_8h_1aa1141bebf0e4e41459354af76f572949">PREPROCESSOR_ARGS_EMPTY</link>(__VA_ARGS__),&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_plugin__interface_8hpp_1a91ac28c5c492c0c0c1a986bb50874f48">EXTENSION_FUNCTION_IMPL_VOID</link>(ret,&#32;name),&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_plugin__interface_8hpp_1a6c17abaed3d41e86f7ba99664e6c82c3">EXTENSION_FUNCTION_IMPL</link>(ret,&#32;name,&#32;__VA_ARGS__))
</programlisting>    </section><anchor xml:id="_plugin__interface_8hpp_1a879122e13eac227389dac9ee5a3547f4"/>    <section>
    <title>EXTENSION_FUNCTION_THROW</title>
<indexterm><primary>EXTENSION_FUNCTION_THROW</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION_THROW</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION_THROW( error)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;\
&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exception&#32;ex&#32;=&#32;<link linkend="_reflect__exception_8h_1afb44879b0180bb6db7c8942a90bd8086">exception_create_const</link>(error,&#32;<emphasis role="stringliteral">&quot;PluginException&quot;</emphasis>,&#32;0,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;throwable&#32;th&#32;=&#32;<link linkend="_reflect__throwable_8h_1aa686c060b2d755a0d62dfcba1e0f2aac">throwable_create</link>(<link linkend="_reflect__value__type_8h_1a0fbfd806bd884e392910dfe361826973">value_create_exception</link>(ex));&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;<link linkend="_reflect__value__type_8h_1a214a304d001a556a0695a73c09121dbc">value_create_throwable</link>(th);&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(0)
</programlisting>    </section><anchor xml:id="_plugin__interface_8hpp_1a41efb02583af86433ef503cb35cdb8c7"/>    <section>
    <title>EXTENSION_FUNCTION_CHECK_ITERATOR</title>
<indexterm><primary>EXTENSION_FUNCTION_CHECK_ITERATOR</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION_CHECK_ITERATOR</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION_CHECK_ITERATOR( error,  iterator,  <link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link>)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_metacall__value_8h_1a09df370b94fa034a58dc8048e14ed34d">metacall_value_id</link>(args[iterator])&#32;!=&#32;<link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link>)&#32;\
&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;ss;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ss&#32;&lt;&lt;&#32;error&#32;<emphasis role="stringliteral">&quot;.&#32;The&#32;parameter&#32;number&#32;&quot;</emphasis>&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(PREPROCESSOR_ARGS_COUNT(iterator))&#32;<emphasis role="stringliteral">&quot;&#32;requires&#32;a&#32;value&#32;of&#32;type&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_metacall__value_8h_1a905dd1a14e3c517a76730eeaa993fa67">metacall_value_id_name</link>(<link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;received:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_metacall__value_8h_1ad9f2aba3a9b6c6f6a1533f071697fe46">metacall_value_type_name</link>(args[iterator]);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;error_msg&#32;=&#32;ss.str();&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXTENSION_FUNCTION_THROW(error_msg.c_str());&#32;\
&#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_plugin__interface_8hpp_1ae1652160f9ac24ba069540788d87de27"/>    <section>
    <title>EXTENSION_FUNCTION_CHECK</title>
<indexterm><primary>EXTENSION_FUNCTION_CHECK</primary><secondary>plugin_interface.hpp</secondary></indexterm>
<indexterm><primary>plugin_interface.hpp</primary><secondary>EXTENSION_FUNCTION_CHECK</secondary></indexterm>
<para><computeroutput>#define EXTENSION_FUNCTION_CHECK( error,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;\
&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(void)data;&#32;<emphasis role="comment">/*&#32;TODO:&#32;Do&#32;something&#32;with&#32;data&#32;*/</emphasis>&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Disable&#32;warning&#32;on&#32;args&#32;when&#32;no&#32;args&#32;*/</emphasis>&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PREPROCESSOR_IF(<link linkend="_preprocessor__arguments_8h_1aa1141bebf0e4e41459354af76f572949">PREPROCESSOR_ARGS_EMPTY</link>(__VA_ARGS__),&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">void</emphasis>)args;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PREPROCESSOR_EMPTY_SYMBOL())&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(argc&#32;!=&#32;PREPROCESSOR_ARGS_COUNT(__VA_ARGS__))&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;ss;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ss&#32;&lt;&lt;&#32;error&#32;<emphasis role="stringliteral">&quot;.&#32;The&#32;required&#32;number&#32;of&#32;argumens&#32;is&#32;&quot;</emphasis>&#32;<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(PREPROCESSOR_ARGS_COUNT(__VA_ARGS__))&#32;<emphasis role="stringliteral">&quot;,&#32;received:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;argc;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;error_msg&#32;=&#32;ss.str();&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXTENSION_FUNCTION_THROW(error_msg.c_str());&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PREPROCESSOR_FOR(<link linkend="_plugin__interface_8hpp_1a41efb02583af86433ef503cb35cdb8c7">EXTENSION_FUNCTION_CHECK_ITERATOR</link>,&#32;error,&#32;__VA_ARGS__)&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(0)
</programlisting></section>
</section>
</section>

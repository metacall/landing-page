<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_filesystem_8h" xml:lang="en-US">
<title>filesystem.h File Reference</title>
<indexterm><primary>filesystem.h</primary></indexterm>
<programlisting>#include &lt;filesystem/filesystem_api.h&gt;
#include &lt;adt/adt_set.h&gt;
#include &lt;adt/adt_vector.h&gt;
</programlisting>Include dependency graph for filesystem.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="filesystem_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct file_type * <link linkend="_filesystem_8h_1a1fea2a4514fa0a01c4fa0fe2d0f014de">file</link></para>
</listitem>
            <listitem><para>typedef struct directory_type * <link linkend="_filesystem_8h_1a2391b569a0e8ef3688d7ae5845ff1bc4">directory</link></para>
</listitem>
            <listitem><para>typedef struct filesystem_type * <link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0f">filesystem_flags</link> { 
<link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa5b7524837d6643f9725091842d013520">FILESYSTEM_FLAGS_NONE</link> = 0x00
, <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0faca618ec1fd26cf4f747ac04be6ca3589">FILESYSTEM_FLAGS_LOAD_LAZY</link> = 0x01 &lt;&lt; 0x00
, <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa2cd5b792a29402c7bc2f980cd3e183d1">FILESYSTEM_FLAGS_WATCH_SYNC</link> = 0x01 &lt;&lt; 0x01
, <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa6f83a80620d031da43eaa0e3160c0156">FILESYSTEM_FLAGS_READABLE</link> = 0x01 &lt;&lt; 0x02
, 
<link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa33d09e1cac2bf4ea77ca65184d740778">FILESYSTEM_FLAGS_WRITEABLE</link> = 0x01 &lt;&lt; 0x03
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>FILESYSTEM_API <link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> <link linkend="_filesystem_8h_1ab013cf437b8dd8b6c3029ddf68fd8dd2">filesystem_create</link> (const char *root, <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0f">filesystem_flags</link> flags)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1ab04b8eb7b70e7a906f56acb13c376343">filesystem_add_file</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char *file_path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a6964dfeb817f5cd400556e9678a93362">filesystem_add_directory</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char *directory_path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a271263e0bf36bc664631ce3e2d14cbec">filesystem_remove_file</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char *file_path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a707fdba44e6f96d0473449ff99edf523">filesystem_remove_directory</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char *directory_path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a1a45af96aa3c4d270d076a0fdded8bf9">filesystem_list_files</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> files)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1acbace5df0b7256ac18f0b1ca8b20e2ee">filesystem_list_files_by_extension</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__set_8h_1af1b1dedbae3a63c77c18814c6080529f">set</link> files)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1aaa4abaf100ec7d27218cba801de14a11">filesystem_list_directories</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> directories)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a5422eb105a55772c70a11188479536ff">filesystem_cannonical_path_from_file</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_filesystem_8h_1a1fea2a4514fa0a01c4fa0fe2d0f014de">file</link> f, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API int <link linkend="_filesystem_8h_1a56786810f2431c262a1ac561b5e23f34">filesystem_cannonical_path_from_directory</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_filesystem_8h_1a2391b569a0e8ef3688d7ae5845ff1bc4">directory</link> d, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> path)</para>
</listitem>
            <listitem><para>FILESYSTEM_API void <link linkend="_filesystem_8h_1a696de751ede975d955d6be29ecdbb736">filesystem_destroy</link> (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs)</para>
</listitem>
            <listitem><para>FILESYSTEM_API const char * <link linkend="_filesystem_8h_1a8d67c5a67eaa712b52a6d0d6bbf39323">filesystem_print_info</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_filesystem_8h_1a1fea2a4514fa0a01c4fa0fe2d0f014de"/>    <section>
    <title>file</title>
<indexterm><primary>file</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>file</secondary></indexterm>
<para><computeroutput>typedef struct file_type* <link linkend="_filesystem_8h_1a1fea2a4514fa0a01c4fa0fe2d0f014de">file</link></computeroutput></para>    </section><anchor xml:id="_filesystem_8h_1a2391b569a0e8ef3688d7ae5845ff1bc4"/>    <section>
    <title>directory</title>
<indexterm><primary>directory</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>directory</secondary></indexterm>
<para><computeroutput>typedef struct directory_type* <link linkend="_filesystem_8h_1a2391b569a0e8ef3688d7ae5845ff1bc4">directory</link></computeroutput></para>    </section><anchor xml:id="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b"/>    <section>
    <title>filesystem</title>
<indexterm><primary>filesystem</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem</secondary></indexterm>
<para><computeroutput>typedef struct filesystem_type* <link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0f"/>    <section>
    <title>filesystem_flags</title>
<indexterm><primary>filesystem_flags</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_flags</secondary></indexterm>
<para><computeroutput>enum <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0f">filesystem_flags</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>FILESYSTEM_FLAGS_NONE</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>FILESYSTEM_FLAGS_NONE</secondary></indexterm>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa5b7524837d6643f9725091842d013520"/>FILESYSTEM_FLAGS_NONE</entry><entry></entry></row><row><entry><indexterm><primary>FILESYSTEM_FLAGS_LOAD_LAZY</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>FILESYSTEM_FLAGS_LOAD_LAZY</secondary></indexterm>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0faca618ec1fd26cf4f747ac04be6ca3589"/>FILESYSTEM_FLAGS_LOAD_LAZY</entry><entry></entry></row><row><entry><indexterm><primary>FILESYSTEM_FLAGS_WATCH_SYNC</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>FILESYSTEM_FLAGS_WATCH_SYNC</secondary></indexterm>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa2cd5b792a29402c7bc2f980cd3e183d1"/>FILESYSTEM_FLAGS_WATCH_SYNC</entry><entry></entry></row><row><entry><indexterm><primary>FILESYSTEM_FLAGS_READABLE</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>FILESYSTEM_FLAGS_READABLE</secondary></indexterm>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa6f83a80620d031da43eaa0e3160c0156"/>FILESYSTEM_FLAGS_READABLE</entry><entry></entry></row><row><entry><indexterm><primary>FILESYSTEM_FLAGS_WRITEABLE</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>FILESYSTEM_FLAGS_WRITEABLE</secondary></indexterm>
<anchor xml:id="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0fa33d09e1cac2bf4ea77ca65184d740778"/>FILESYSTEM_FLAGS_WRITEABLE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_filesystem_8h_1ab013cf437b8dd8b6c3029ddf68fd8dd2"/>    <section>
    <title>filesystem_create()</title>
<indexterm><primary>filesystem_create</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_create</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API <link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> filesystem_create (const char * root, <link linkend="_filesystem_8h_1a7e22d59b12f4912e1371af5873c8cd0f">filesystem_flags</link> flags)</computeroutput></para><para>

<para>Creates a new file system based on a @root path. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>root</entry>
                                <entry>
<para>String path where file system will be virtually mounted</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A handle to file system if success, null otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1ab04b8eb7b70e7a906f56acb13c376343"/>    <section>
    <title>filesystem_add_file()</title>
<indexterm><primary>filesystem_add_file</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_add_file</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_add_file (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char * file_path)</computeroutput></para><para>

<para>Add a file into the file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>file_path</entry>
                                <entry>
<para>Absolute path to the file</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a6964dfeb817f5cd400556e9678a93362"/>    <section>
    <title>filesystem_add_directory()</title>
<indexterm><primary>filesystem_add_directory</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_add_directory</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_add_directory (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char * directory_path)</computeroutput></para><para>

<para>Add a directory into the file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>directory_path</entry>
                                <entry>
<para>Absolute path to the directory</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a271263e0bf36bc664631ce3e2d14cbec"/>    <section>
    <title>filesystem_remove_file()</title>
<indexterm><primary>filesystem_remove_file</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_remove_file</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_remove_file (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char * file_path)</computeroutput></para><para>

<para>Add a file into the file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>file_path</entry>
                                <entry>
<para>Absolute path to the file</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a707fdba44e6f96d0473449ff99edf523"/>    <section>
    <title>filesystem_remove_directory()</title>
<indexterm><primary>filesystem_remove_directory</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_remove_directory</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_remove_directory (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, const char * directory_path)</computeroutput></para><para>

<para>Remove a directory from the file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>directory_path</entry>
                                <entry>
<para>Absolute path to the directory</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a1a45af96aa3c4d270d076a0fdded8bf9"/>    <section>
    <title>filesystem_list_files()</title>
<indexterm><primary>filesystem_list_files</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_list_files</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_list_files (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> files)</computeroutput></para><para>

<para>List all files contained in a file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>files</entry>
                                <entry>
<para>Vector containing all files inside the file system</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1acbace5df0b7256ac18f0b1ca8b20e2ee"/>    <section>
    <title>filesystem_list_files_by_extension()</title>
<indexterm><primary>filesystem_list_files_by_extension</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_list_files_by_extension</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_list_files_by_extension (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__set_8h_1af1b1dedbae3a63c77c18814c6080529f">set</link> files)</computeroutput></para><para>

<para>List all files contained in a file system sorted by extension. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>files</entry>
                                <entry>
<para>Set containing vectors of files sorted by extension</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1aaa4abaf100ec7d27218cba801de14a11"/>    <section>
    <title>filesystem_list_directories()</title>
<indexterm><primary>filesystem_list_directories</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_list_directories</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_list_directories (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> directories)</computeroutput></para><para>

<para>List all directories contained in a file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>directories</entry>
                                <entry>
<para>Vector containing all directories inside the file system</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a5422eb105a55772c70a11188479536ff"/>    <section>
    <title>filesystem_cannonical_path_from_file()</title>
<indexterm><primary>filesystem_cannonical_path_from_file</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_cannonical_path_from_file</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_cannonical_path_from_file (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_filesystem_8h_1a1fea2a4514fa0a01c4fa0fe2d0f014de">file</link> f, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> path)</computeroutput></para><para>

<para>Generates the cannonical path of a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>file</entry>
                                <entry>
<para>Pointer reference to the file to be cannonicalized</para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>path</entry>
                                <entry>
<para>Vector of strings containing the cannonical path</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a56786810f2431c262a1ac561b5e23f34"/>    <section>
    <title>filesystem_cannonical_path_from_directory()</title>
<indexterm><primary>filesystem_cannonical_path_from_directory</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_cannonical_path_from_directory</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API int filesystem_cannonical_path_from_directory (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs, <link linkend="_filesystem_8h_1a2391b569a0e8ef3688d7ae5845ff1bc4">directory</link> d, <link linkend="_adt__vector_8h_1addb8a5a5ce3ff4924de759607f4a7a8f">vector</link> path)</computeroutput></para><para>

<para>Generates the cannonical path of a directory. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>A handle to the file system</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>directory</entry>
                                <entry>
<para>Pointer reference to the directory to be cannonicalized</para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>path</entry>
                                <entry>
<para>Vector of strings containing the cannonical path</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success, different from zero otherwhise </para>
</formalpara>
</para>
    </section><anchor xml:id="_filesystem_8h_1a696de751ede975d955d6be29ecdbb736"/>    <section>
    <title>filesystem_destroy()</title>
<indexterm><primary>filesystem_destroy</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_destroy</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API void filesystem_destroy (<link linkend="_filesystem_8h_1a81965a0147f5428b8d298f395157f49b">filesystem</link> fs)</computeroutput></para><para>

<para>Unmounts the virtual file system. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>fs</entry>
                                <entry>
<para>Handle referencing the file system </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_filesystem_8h_1a8d67c5a67eaa712b52a6d0d6bbf39323"/>    <section>
    <title>filesystem_print_info()</title>
<indexterm><primary>filesystem_print_info</primary><secondary>filesystem.h</secondary></indexterm>
<indexterm><primary>filesystem.h</primary><secondary>filesystem_print_info</secondary></indexterm>
<para><computeroutput>FILESYSTEM_API const char* filesystem_print_info (void )</computeroutput></para><para>

<para>Provide the module information. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Static string containing module information </para>
</formalpara>
</para>
</section>
</section>
</section>

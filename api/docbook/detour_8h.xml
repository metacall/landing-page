<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_detour_8h" xml:lang="en-US">
<title>detour.h File Reference</title>
<indexterm><primary>detour.h</primary></indexterm>
<programlisting>#include &lt;detour/detour_api.h&gt;
#include &lt;detour/detour_handle.h&gt;
#include &lt;plugin/plugin.h&gt;
</programlisting>Include dependency graph for detour.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="detour_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_plugin__impl_8h_1af5672f8038c7c743f97c5e6fd31e3bdc">plugin</link> <link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>DETOUR_API int <link linkend="_detour_8h_1a7774df25f012aa74dd2eb720f3dda3da">detour_initialize</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>

<para><anchor xml:id="__1amgrp01747264fe7bf50731df0522c351974e"/>Create detour by</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>name</entry>
                                <entry>
<para>Plugin will be used to detourize and detourize</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Pointer to detour on correct initialization, null otherwise </para>
</formalpara>
</para>
        <itemizedlist>
            <listitem><para>DETOUR_API void(*)(void) <link linkend="_detour_8h_1a499d7044cff90872c46201c25f1d1636">detour_trampoline</link> (<link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> handle)</para>
</listitem>
            <listitem><para>DETOUR_API <link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> <link linkend="_detour_8h_1aeb1aa814616739364742a8821a89fe42">detour_create</link> (const char *name)</para>
</listitem>
            <listitem><para>DETOUR_API const char * <link linkend="_detour_8h_1a874646cd70c19b1f5638ea40b18f5192">detour_name</link> (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d)</para>
</listitem>
            <listitem><para>DETOUR_API <link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> <link linkend="_detour_8h_1abd6884b0274d91b4d150d4a41d9ff435">detour_install</link> (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d, void(*target)(void), void(*hook)(void))</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour_8h_1ae71c2cec478b01c0c159f3aaefe8176f">detour_uninstall</link> (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d, <link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> handle)</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour_8h_1a5a685867fbcf4276c4643162f60ba4be">detour_clear</link> (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d)</para>
</listitem>
            <listitem><para>DETOUR_API void <link linkend="_detour_8h_1a2620b95d56350cb422c32b33d20dc8b7">detour_destroy</link> (void)</para>
</listitem>
            <listitem><para>DETOUR_API const char * <link linkend="_detour_8h_1aa8ebcacb3c1579f44ec26f34100caa7a">detour_print_info</link> (void)</para>
</listitem>
        </itemizedlist>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353"/>    <section>
    <title>detour</title>
<indexterm><primary>detour</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_plugin__impl_8h_1af5672f8038c7c743f97c5e6fd31e3bdc">plugin</link> <link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_detour_8h_1a7774df25f012aa74dd2eb720f3dda3da"/>    <section>
    <title>detour_initialize()</title>
<indexterm><primary>detour_initialize</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_initialize</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_initialize (void )</computeroutput></para><para>

<para>Initialize detour module. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Return zero correct initialization, distinct from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour_8h_1aeb1aa814616739364742a8821a89fe42"/>    <section>
    <title>detour_create()</title>
<indexterm><primary>detour_create</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_create</secondary></indexterm>
<para><computeroutput>DETOUR_API <link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> detour_create (const char * name)</computeroutput></para>    </section><anchor xml:id="_detour_8h_1a874646cd70c19b1f5638ea40b18f5192"/>    <section>
    <title>detour_name()</title>
<indexterm><primary>detour_name</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_name</secondary></indexterm>
<para><computeroutput>DETOUR_API const char* detour_name (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d)</computeroutput></para><para>

<para>Get name of detour. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>d</entry>
                                <entry>
<para>Reference to the detour</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Static const string with detour name </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour_8h_1abd6884b0274d91b4d150d4a41d9ff435"/>    <section>
    <title>detour_install()</title>
<indexterm><primary>detour_install</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_install</secondary></indexterm>
<para><computeroutput>DETOUR_API <link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> detour_install (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d, void(*)(void) target, void(*)(void) hook)</computeroutput></para><para>

<para>Install detour from @target to @hook. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>d</entry>
                                <entry>
<para>Reference to the detour</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>target</entry>
                                <entry>
<para>Reference to the function to be hooked</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>hook</entry>
                                <entry>
<para>Reference to the function will be called instead of @target</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Pointer to the detour handle </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour_8h_1ae71c2cec478b01c0c159f3aaefe8176f"/>    <section>
    <title>detour_uninstall()</title>
<indexterm><primary>detour_uninstall</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_uninstall</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_uninstall (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d, <link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> handle)</computeroutput></para><para>

<para>Install detour from @target to @hook. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>d</entry>
                                <entry>
<para>Reference to the detour</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>handle</entry>
                                <entry>
<para>Reference to the detour handle</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Return zero if success, different from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour_8h_1a5a685867fbcf4276c4643162f60ba4be"/>    <section>
    <title>detour_clear()</title>
<indexterm><primary>detour_clear</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_clear</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_clear (<link linkend="_detour_8h_1ae07655fe8f7440e2b6b8b2f0b31df353">detour</link> d)</computeroutput></para><para>

<para>Destroy detour by handle @d. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>d</entry>
                                <entry>
<para>Reference to the detour</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Return zero on correct destruction, different from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour_8h_1a2620b95d56350cb422c32b33d20dc8b7"/>    <section>
    <title>detour_destroy()</title>
<indexterm><primary>detour_destroy</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_destroy</secondary></indexterm>
<para><computeroutput>DETOUR_API void detour_destroy (void )</computeroutput></para><para>

<para>Destroy all detours. </para>
</para>
    </section><anchor xml:id="_detour_8h_1aa8ebcacb3c1579f44ec26f34100caa7a"/>    <section>
    <title>detour_print_info()</title>
<indexterm><primary>detour_print_info</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_print_info</secondary></indexterm>
<para><computeroutput>DETOUR_API const char* detour_print_info (void )</computeroutput></para><para>

<para>Provide the module information. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Static string containing module information </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_detour_8h_1a499d7044cff90872c46201c25f1d1636"/>    <section>
    <title>detour_trampoline</title>
<indexterm><primary>detour_trampoline</primary><secondary>detour.h</secondary></indexterm>
<indexterm><primary>detour.h</primary><secondary>detour_trampoline</secondary></indexterm>
<para><computeroutput>DETOUR_API void(*)(void) detour_trampoline(<link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> handle) (<link linkend="_detour__handle_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59">detour_handle</link> handle)</computeroutput></para><para>

<para>Get trampoline of the detour. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>handle</entry>
                                <entry>
<para>Reference to the detour handle</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Pointer to the trampoline function </para>
</formalpara>
</para>
</section>
</section>
</section>

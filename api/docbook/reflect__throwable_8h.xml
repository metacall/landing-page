<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_reflect__throwable_8h" xml:lang="en-US">
<title>reflect_throwable.h File Reference</title>
<indexterm><primary>reflect_throwable.h</primary></indexterm>
<programlisting>#include &lt;reflect/reflect_api.h&gt;
#include &lt;reflect/reflect_value.h&gt;
</programlisting>Include dependency graph for reflect_throwable.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="reflect__throwable_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="reflect__throwable_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct throwable_type * <link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>REFLECT_API <link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> <link linkend="_reflect__throwable_8h_1aa686c060b2d755a0d62dfcba1e0f2aac">throwable_create</link> (<link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link> v)</para>
</listitem>
            <listitem><para>REFLECT_API <link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link> <link linkend="_reflect__throwable_8h_1ac426dbb4b94ca3da32c9a1c3f5f918e8">throwable_value</link> (<link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> th)</para>
</listitem>
            <listitem><para>REFLECT_API void <link linkend="_reflect__throwable_8h_1a983b1ed006e669a44d504218ffa5f194">throwable_destroy</link> (<link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> th)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00"/>    <section>
    <title>throwable</title>
<indexterm><primary>throwable</primary><secondary>reflect_throwable.h</secondary></indexterm>
<indexterm><primary>reflect_throwable.h</primary><secondary>throwable</secondary></indexterm>
<para><computeroutput>typedef struct throwable_type* <link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_reflect__throwable_8h_1aa686c060b2d755a0d62dfcba1e0f2aac"/>    <section>
    <title>throwable_create()</title>
<indexterm><primary>throwable_create</primary><secondary>reflect_throwable.h</secondary></indexterm>
<indexterm><primary>reflect_throwable.h</primary><secondary>throwable_create</secondary></indexterm>
<para><computeroutput>REFLECT_API <link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> throwable_create (<link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link> v)</computeroutput></para>    </section><anchor xml:id="_reflect__throwable_8h_1ac426dbb4b94ca3da32c9a1c3f5f918e8"/>    <section>
    <title>throwable_value()</title>
<indexterm><primary>throwable_value</primary><secondary>reflect_throwable.h</secondary></indexterm>
<indexterm><primary>reflect_throwable.h</primary><secondary>throwable_value</secondary></indexterm>
<para><computeroutput>REFLECT_API <link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link> throwable_value (<link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> th)</computeroutput></para>    </section><anchor xml:id="_reflect__throwable_8h_1a983b1ed006e669a44d504218ffa5f194"/>    <section>
    <title>throwable_destroy()</title>
<indexterm><primary>throwable_destroy</primary><secondary>reflect_throwable.h</secondary></indexterm>
<indexterm><primary>reflect_throwable.h</primary><secondary>throwable_destroy</secondary></indexterm>
<para><computeroutput>REFLECT_API void throwable_destroy (<link linkend="_reflect__throwable_8h_1a1893711e7c9195387882e1a7bea74d00">throwable</link> th)</computeroutput></para></section>
</section>
</section>

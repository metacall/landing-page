<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_log__map_8h">
<title>log_map.h File Reference</title>
<indexterm><primary>log_map.h</primary></indexterm>
<programlisting>#include &lt;log/log_api.h&gt;
#include &lt;stdlib.h&gt;
</programlisting>Include dependency graph for log_map.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="log__map_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_log__map_8h_1a51f29049e60390011ba60759928b90d4">LOG_MAP_MIN_SIZE</link>   ((size_t)0x00000100)</para>
</listitem>
            <listitem><para>#define <link linkend="_log__map_8h_1a6c84d535201e393fc5aa12c832099a9a">LOG_MAP_MAX_SIZE</link>   ((size_t)0x00010000)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct log_map_type * <link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link></para>
</listitem>
            <listitem><para>typedef struct log_map_iterator_type * <link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>LOG_API <link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_log__map_8h_1ae7d12bf96b98e30090accec32d5e087f">log_map_create</link> (size_t size)</para>
</listitem>
            <listitem><para>LOG_API size_t <link linkend="_log__map_8h_1a979ffcf3807ac2bcd4a103a1a4b3942a">log_map_size</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>)</para>
</listitem>
            <listitem><para>LOG_API size_t <link linkend="_log__map_8h_1a713b1e9ac10acc9f632bfcf018ba3804">log_map_collisions</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>)</para>
</listitem>
            <listitem><para>LOG_API int <link linkend="_log__map_8h_1a45919aa5dc4f8d86a587688f31d8f21c">log_map_insert</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>, const char *key, const void *<link linkend="_reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a">value</link>)</para>
</listitem>
            <listitem><para>const LOG_API void * <link linkend="_log__map_8h_1ad9b2193625cf0720ceb7c6f88747a41e">log_map_get</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>, const char *key)</para>
</listitem>
            <listitem><para>const LOG_API void * <link linkend="_log__map_8h_1a75e4147fdf32fa0e85b3f92715f48bcf">log_map_remove</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>, const char *key)</para>
</listitem>
            <listitem><para>LOG_API int <link linkend="_log__map_8h_1a1cce62efc00f8725d0c98448afcc4d03">log_map_clear</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>)</para>
</listitem>
            <listitem><para>LOG_API int <link linkend="_log__map_8h_1aa3e9451f8b4a7ffcfeb6e8354001d167">log_map_destroy</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>)</para>
</listitem>
            <listitem><para>LOG_API <link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> <link linkend="_log__map_8h_1a868fd9f4821e61dd5c256fa92be67483">log_map_iterator_begin</link> (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> <link linkend="_adt__map_8h_1a894ef97deeb054c79dd0043ce64d100c">map</link>)</para>
</listitem>
            <listitem><para>const LOG_API char * <link linkend="_log__map_8h_1abe996fa9adc787155fe80220af1b86b9">log_map_iterator_key</link> (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</para>
</listitem>
            <listitem><para>const LOG_API void * <link linkend="_log__map_8h_1ad44b39000edc860f31d44c1f18617b02">log_map_iterator_value</link> (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</para>
</listitem>
            <listitem><para>LOG_API int <link linkend="_log__map_8h_1a6b33590e86d50ce35920e7826b2ff0b1">log_map_iterator_next</link> (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</para>
</listitem>
            <listitem><para>LOG_API int <link linkend="_log__map_8h_1a1faa8c1abffa2d1fe93046720ac2f9da">log_map_iterator_end</link> (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_log__map_8h_1a51f29049e60390011ba60759928b90d4"/>    <section>
    <title>LOG_MAP_MIN_SIZE</title>
<indexterm><primary>LOG_MAP_MIN_SIZE</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>LOG_MAP_MIN_SIZE</secondary></indexterm>
<para><computeroutput>#define LOG_MAP_MIN_SIZE   ((size_t)0x00000100)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a6c84d535201e393fc5aa12c832099a9a"/>    <section>
    <title>LOG_MAP_MAX_SIZE</title>
<indexterm><primary>LOG_MAP_MAX_SIZE</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>LOG_MAP_MAX_SIZE</secondary></indexterm>
<para><computeroutput>#define LOG_MAP_MAX_SIZE   ((size_t)0x00010000)</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de"/>    <section>
    <title>log_map</title>
<indexterm><primary>log_map</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map</secondary></indexterm>
<para><computeroutput>typedef struct log_map_type* <link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link></computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a5759f32622bbae31823849a72cb65278"/>    <section>
    <title>log_map_iterator</title>
<indexterm><primary>log_map_iterator</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator</secondary></indexterm>
<para><computeroutput>typedef struct log_map_iterator_type* <link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_log__map_8h_1ae7d12bf96b98e30090accec32d5e087f"/>    <section>
    <title>log_map_create()</title>
<indexterm><primary>log_map_create</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_create</secondary></indexterm>
<para><computeroutput>LOG_API <link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> log_map_create (size_t size)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a979ffcf3807ac2bcd4a103a1a4b3942a"/>    <section>
    <title>log_map_size()</title>
<indexterm><primary>log_map_size</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_size</secondary></indexterm>
<para><computeroutput>LOG_API size_t log_map_size (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a713b1e9ac10acc9f632bfcf018ba3804"/>    <section>
    <title>log_map_collisions()</title>
<indexterm><primary>log_map_collisions</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_collisions</secondary></indexterm>
<para><computeroutput>LOG_API size_t log_map_collisions (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a45919aa5dc4f8d86a587688f31d8f21c"/>    <section>
    <title>log_map_insert()</title>
<indexterm><primary>log_map_insert</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_insert</secondary></indexterm>
<para><computeroutput>LOG_API int log_map_insert (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map, const char * key, const void * value)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1ad9b2193625cf0720ceb7c6f88747a41e"/>    <section>
    <title>log_map_get()</title>
<indexterm><primary>log_map_get</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_get</secondary></indexterm>
<para><computeroutput>const LOG_API void* log_map_get (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map, const char * key)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a75e4147fdf32fa0e85b3f92715f48bcf"/>    <section>
    <title>log_map_remove()</title>
<indexterm><primary>log_map_remove</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_remove</secondary></indexterm>
<para><computeroutput>const LOG_API void* log_map_remove (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map, const char * key)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a1cce62efc00f8725d0c98448afcc4d03"/>    <section>
    <title>log_map_clear()</title>
<indexterm><primary>log_map_clear</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_clear</secondary></indexterm>
<para><computeroutput>LOG_API int log_map_clear (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1aa3e9451f8b4a7ffcfeb6e8354001d167"/>    <section>
    <title>log_map_destroy()</title>
<indexterm><primary>log_map_destroy</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_destroy</secondary></indexterm>
<para><computeroutput>LOG_API int log_map_destroy (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a868fd9f4821e61dd5c256fa92be67483"/>    <section>
    <title>log_map_iterator_begin()</title>
<indexterm><primary>log_map_iterator_begin</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator_begin</secondary></indexterm>
<para><computeroutput>LOG_API <link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> log_map_iterator_begin (<link linkend="_log__map_8h_1a7b4ee73aca99f44b9191c6d2869cf6de">log_map</link> map)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1abe996fa9adc787155fe80220af1b86b9"/>    <section>
    <title>log_map_iterator_key()</title>
<indexterm><primary>log_map_iterator_key</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator_key</secondary></indexterm>
<para><computeroutput>const LOG_API char* log_map_iterator_key (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1ad44b39000edc860f31d44c1f18617b02"/>    <section>
    <title>log_map_iterator_value()</title>
<indexterm><primary>log_map_iterator_value</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator_value</secondary></indexterm>
<para><computeroutput>const LOG_API void* log_map_iterator_value (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a6b33590e86d50ce35920e7826b2ff0b1"/>    <section>
    <title>log_map_iterator_next()</title>
<indexterm><primary>log_map_iterator_next</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator_next</secondary></indexterm>
<para><computeroutput>LOG_API int log_map_iterator_next (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</computeroutput></para>    </section><anchor xml:id="_log__map_8h_1a1faa8c1abffa2d1fe93046720ac2f9da"/>    <section>
    <title>log_map_iterator_end()</title>
<indexterm><primary>log_map_iterator_end</primary><secondary>log_map.h</secondary></indexterm>
<indexterm><primary>log_map.h</primary><secondary>log_map_iterator_end</secondary></indexterm>
<para><computeroutput>LOG_API int log_map_iterator_end (<link linkend="_log__map_8h_1a5759f32622bbae31823849a72cb65278">log_map_iterator</link> iterator)</computeroutput></para></section>
</section>
</section>

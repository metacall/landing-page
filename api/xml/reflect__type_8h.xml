<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="reflect__type_8h" kind="file" language="C++">
    <compoundname>reflect_type.h</compoundname>
    <includes local="no">reflect/reflect_api.h</includes>
    <includes refid="reflect__type__id_8h" local="no">reflect/reflect_type_id.h</includes>
    <includes refid="reflect__value_8h" local="no">reflect/reflect_value.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="reflect_8h" local="no">reflect.h</includedby>
    <includedby refid="reflect__attribute_8h" local="no">reflect_attribute.h</includedby>
    <includedby refid="reflect__constructor_8h" local="no">reflect_constructor.h</includedby>
    <includedby refid="reflect__scope_8h" local="no">reflect_scope.h</includedby>
    <includedby refid="reflect__signature_8h" local="no">reflect_signature.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>reflect_type.h</label>
        <link refid="reflect__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>reflect/reflect_type_id.h</label>
        <link refid="reflect__type__id_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>reflect/reflect_value.h</label>
        <link refid="reflect__value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reflect/reflect_api.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
      </node>
      <node id="5">
        <label>reflect_class.h</label>
        <link refid="reflect__class_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>loader_manager_impl.h</label>
        <link refid="loader__manager__impl_8h"/>
      </node>
      <node id="17">
        <label>reflect_function.h</label>
        <link refid="reflect__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>reflect_object.h</label>
        <link refid="reflect__object_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>loader_impl_interface.h</label>
        <link refid="loader__impl__interface_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>reflect_scope.h</label>
        <link refid="reflect__scope_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reflect_type.h</label>
        <link refid="reflect__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>reflect_method.h</label>
        <link refid="reflect__method_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>reflect_constructor.h</label>
        <link refid="reflect__constructor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>reflect_attribute.h</label>
        <link refid="reflect__attribute_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>reflect_value_type.h</label>
        <link refid="reflect__value__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>loader_host.h</label>
        <link refid="loader__host_8h"/>
      </node>
      <node id="14">
        <label>loader_impl.h</label>
        <link refid="loader__impl_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>loader.h</label>
        <link refid="loader_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>reflect_context.h</label>
        <link refid="reflect__context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reflect.h</label>
        <link refid="reflect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>reflect_signature.h</label>
        <link refid="reflect__signature_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtype__interface__type" prot="public">type_interface_type</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" prot="public" static="no">
        <type>struct type_type *</type>
        <definition>typedef struct type_type* type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="37" column="24" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* type_impl</definition>
        <argsstring></argsstring>
        <name>type_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="39" column="14" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reflect__type_8h_1a66867c5842b36b62294e829ecc0ba2fe" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* type_impl_interface_create) (type, type_impl)</definition>
        <argsstring>)(type, type_impl)</argsstring>
        <name>type_impl_interface_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="41" column="9" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reflect__type_8h_1a72bb5eeb8fea871cfb4e0f157947b870" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* type_impl_interface_destroy) (type, type_impl)</definition>
        <argsstring>)(type, type_impl)</argsstring>
        <name>type_impl_interface_destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="43" column="9" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reflect__type_8h_1a7b3907ca7b27baed594c631ab82cc631" prot="public" static="no">
        <type>type_interface(*</type>
        <definition>typedef type_interface(* type_impl_interface_singleton) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>type_impl_interface_singleton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="52" column="9" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reflect__type_8h_1a7683f6ef2a040083621265d0a1c79e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
        <definition>REFLECT_API type type_create</definition>
        <argsstring>(type_id id, const char *name, type_impl impl, type_impl_interface_singleton singleton)</argsstring>
        <name>type_create</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref></type>
          <declname>impl</declname>
        </param>
        <param>
          <type><ref refid="reflect__type_8h_1a7b3907ca7b27baed594c631ab82cc631" kindref="member">type_impl_interface_singleton</ref></type>
          <declname>singleton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="54" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="54" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type_8h_1af50924b7190a1d7777a0cf7ae75094cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
        <definition>REFLECT_API type_id type_index</definition>
        <argsstring>(type t)</argsstring>
        <name>type_index</name>
        <param>
          <type><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="56" column="21" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="56" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type_8h_1a67e5fbed79b56e6af024546da3d471fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API const char *</type>
        <definition>REFLECT_API const char* type_name</definition>
        <argsstring>(type t)</argsstring>
        <name>type_name</name>
        <param>
          <type><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="58" column="24" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="58" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type_8h_1afba531946394a5b0fa5af71c64fb3ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref></type>
        <definition>REFLECT_API type_impl type_derived</definition>
        <argsstring>(type t)</argsstring>
        <name>type_derived</name>
        <param>
          <type><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="60" column="23" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="60" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type_8h_1a19541fec33dcd6f5ed0904800650e24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a" kindref="member">value</ref></type>
        <definition>REFLECT_API value type_metadata</definition>
        <argsstring>(type t)</argsstring>
        <name>type_metadata</name>
        <param>
          <type><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="65" column="19" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="65" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type_8h_1ae196cc48207fd9e7a909f18f0a7ad72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API void</type>
        <definition>REFLECT_API void type_destroy</definition>
        <argsstring>(type t)</argsstring>
        <name>type_destroy</name>
        <param>
          <type><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" line="67" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h" declline="67" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Reflect<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>library<sp/>for<sp/>provide<sp/>reflection<sp/>and<sp/>metadata<sp/>representation.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2022<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>REFLECT_TYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFLECT_TYPE_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;reflect/reflect_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__type__id_8h" kindref="compound">reflect/reflect_type_id.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__value_8h" kindref="compound">reflect/reflect_value.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">type_type;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">type_type<sp/>*<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="reflect__type_8h_1a66867c5842b36b62294e829ecc0ba2fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="reflect__type_8h_1a66867c5842b36b62294e829ecc0ba2fe" kindref="member">type_impl_interface_create</ref>)(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref>,<sp/><ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="reflect__type_8h_1a72bb5eeb8fea871cfb4e0f157947b870" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="reflect__type_8h_1a72bb5eeb8fea871cfb4e0f157947b870" kindref="member">type_impl_interface_destroy</ref>)(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref>,<sp/><ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structtype__interface__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtype__interface__type" kindref="compound">type_interface_type</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structtype__interface__type_1a60f8ea0bb3eb1cb32a40be54984c6be0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type_8h_1a66867c5842b36b62294e829ecc0ba2fe" kindref="member">type_impl_interface_create</ref><sp/><ref refid="structtype__interface__type_1a60f8ea0bb3eb1cb32a40be54984c6be0" kindref="member">create</ref>;</highlight></codeline>
<codeline lineno="48" refid="structtype__interface__type_1a926be7a5f310df529073ca5af91e7e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type_8h_1a72bb5eeb8fea871cfb4e0f157947b870" kindref="member">type_impl_interface_destroy</ref><sp/><ref refid="structtype__interface__type_1a926be7a5f310df529073ca5af91e7e40" kindref="member">destroy</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/>*<sp/>type_interface;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="reflect__type_8h_1a7b3907ca7b27baed594c631ab82cc631" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>type_interface<sp/>(*<ref refid="reflect__type_8h_1a7b3907ca7b27baed594c631ab82cc631" kindref="member">type_impl_interface_singleton</ref>)(void);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="reflect__type_8h_1a7683f6ef2a040083621265d0a1c79e2b" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/><ref refid="reflect__type_8h_1a7683f6ef2a040083621265d0a1c79e2b" kindref="member">type_create</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref><sp/>impl,<sp/><ref refid="reflect__type_8h_1a7b3907ca7b27baed594c631ab82cc631" kindref="member">type_impl_interface_singleton</ref><sp/>singleton);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="reflect__type_8h_1af50924b7190a1d7777a0cf7ae75094cd" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/><ref refid="reflect__type_8h_1af50924b7190a1d7777a0cf7ae75094cd" kindref="member">type_index</ref>(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/>t);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="reflect__type_8h_1a67e5fbed79b56e6af024546da3d471fb" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="reflect__type_8h_1a67e5fbed79b56e6af024546da3d471fb" kindref="member">type_name</ref>(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/>t);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="reflect__type_8h_1afba531946394a5b0fa5af71c64fb3ae9" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__type_8h_1a230af52888c99bcc230160d532eebfcf" kindref="member">type_impl</ref><sp/><ref refid="reflect__type_8h_1afba531946394a5b0fa5af71c64fb3ae9" kindref="member">type_derived</ref>(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/>t);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Subtyping<sp/>(for<sp/>handling<sp/>typed<sp/>containers<sp/>like<sp/>arrays,<sp/>maps<sp/>or<sp/>templates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REFLECT_API<sp/>vector<sp/>type_subtype(type<sp/>t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="reflect__type_8h_1a19541fec33dcd6f5ed0904800650e24a" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a" kindref="member">value</ref><sp/><ref refid="reflect__type_8h_1a19541fec33dcd6f5ed0904800650e24a" kindref="member">type_metadata</ref>(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/>t);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="reflect__type_8h_1ae196cc48207fd9e7a909f18f0a7ad72e" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="reflect__type_8h_1ae196cc48207fd9e7a909f18f0a7ad72e" kindref="member">type_destroy</ref>(<ref refid="reflect__type_8h_1a9989d3b49f04ce2227be1eedda3efaac" kindref="member">type</ref><sp/>t);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>REFLECT_TYPE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="reflect__type__id_8h" kind="file" language="C++">
    <compoundname>reflect_type_id.h</compoundname>
    <includes local="no">reflect/reflect_api.h</includes>
    <includedby refid="reflect_8h" local="no">reflect.h</includedby>
    <includedby refid="reflect__type_8h" local="no">reflect_type.h</includedby>
    <includedby refid="reflect__value__type_8h" local="no">reflect_value_type.h</includedby>
    <includedby refid="reflect__value__type__cast_8h" local="no">reflect_value_type_cast.h</includedby>
    <includedby refid="reflect__value__type__demotion_8h" local="no">reflect_value_type_demotion.h</includedby>
    <includedby refid="reflect__value__type__id__size_8h" local="no">reflect_value_type_id_size.h</includedby>
    <includedby refid="reflect__value__type__promotion_8h" local="no">reflect_value_type_promotion.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>reflect_type_id.h</label>
        <link refid="reflect__type__id_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reflect/reflect_api.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
      </node>
      <node id="6">
        <label>reflect_class.h</label>
        <link refid="reflect__class_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>loader_manager_impl.h</label>
        <link refid="loader__manager__impl_8h"/>
      </node>
      <node id="18">
        <label>reflect_function.h</label>
        <link refid="reflect__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>reflect_object.h</label>
        <link refid="reflect__object_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>loader_impl_interface.h</label>
        <link refid="loader__impl__interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>reflect_value_type_id_size.h</label>
        <link refid="reflect__value__type__id__size_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>reflect_scope.h</label>
        <link refid="reflect__scope_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>reflect_value_type_demotion.h</label>
        <link refid="reflect__value__type__demotion_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>reflect_type.h</label>
        <link refid="reflect__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>reflect_method.h</label>
        <link refid="reflect__method_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reflect_type_id.h</label>
        <link refid="reflect__type__id_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>reflect_constructor.h</label>
        <link refid="reflect__constructor_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>reflect_attribute.h</label>
        <link refid="reflect__attribute_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>reflect_value_type.h</label>
        <link refid="reflect__value__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>reflect_value_type_cast.h</label>
        <link refid="reflect__value__type__cast_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>loader_host.h</label>
        <link refid="loader__host_8h"/>
      </node>
      <node id="23">
        <label>reflect_value_type_promotion.h</label>
        <link refid="reflect__value__type__promotion_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>loader_impl.h</label>
        <link refid="loader__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>loader.h</label>
        <link refid="loader_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>reflect_context.h</label>
        <link refid="reflect__context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reflect.h</label>
        <link refid="reflect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>reflect_signature.h</label>
        <link refid="reflect__signature_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaae" prot="public" static="no" strong="no">
        <type></type>
        <name>type_primitive_id</name>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3e0f738756c5205d71c69d955603f46c" prot="public">
          <name>TYPE_BOOL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea2c8735de6cf799483eefed0e90a386f5" prot="public">
          <name>TYPE_CHAR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea054c36101e4cd86983d1683871e65dd1" prot="public">
          <name>TYPE_SHORT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4fcd4421533bb21c827865bdbac4fef9" prot="public">
          <name>TYPE_INT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4ae533852f8003c3e6e568a79cc35388" prot="public">
          <name>TYPE_LONG</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea19a0a402d33a2e049e91ea9e37e90c2f" prot="public">
          <name>TYPE_FLOAT</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea019d94f7c571e36215cc1a41e825de0c" prot="public">
          <name>TYPE_DOUBLE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeaddb4be6b1cc25112defabef75f73427a" prot="public">
          <name>TYPE_STRING</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea723ecdbb4295e88f08e7594fa8f1afac" prot="public">
          <name>TYPE_BUFFER</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead189c0a53681ec74eeea1f56d08d741f" prot="public">
          <name>TYPE_ARRAY</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead2aa4ac68ee62f30544d0f7c9d16a027" prot="public">
          <name>TYPE_MAP</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea311715f465e358409d513be004f82b2f" prot="public">
          <name>TYPE_PTR</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3db131537bcaa214a88f6013458eae22" prot="public">
          <name>TYPE_FUTURE</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae40264fa7bcc3bc4091d70ddd42bd542" prot="public">
          <name>TYPE_FUNCTION</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea174c14bf485cb83d7bb06493dc9c4eef" prot="public">
          <name>TYPE_NULL</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae3c05d01e5713b8e32e46fb33c279e62" prot="public">
          <name>TYPE_CLASS</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea43aef6302e2b8ee4efdd9ca87636d7c8" prot="public">
          <name>TYPE_OBJECT</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4f7005aa6681a4f86d2e300e08de3720" prot="public">
          <name>TYPE_EXCEPTION</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafb9861ae2a8e03986ea83de85a3d066f" prot="public">
          <name>TYPE_THROWABLE</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea616b31034d047757e1c557b7dbd0f63f" prot="public">
          <name>TYPE_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafeec3d92b10ebeaa68bbb56e4d08691c" prot="public">
          <name>TYPE_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="30" column="1" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" bodystart="31" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" prot="public" static="no">
        <type>int</type>
        <definition>typedef int type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="56" column="13" bodyfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reflect__type__id_8h_1a70e9080600bdc3c5dc1965c4312c3cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API const char *</type>
        <definition>REFLECT_API const char* type_id_name</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_name</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Obtain a human readable form of the type id @id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be converted into string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representing a readable name for @id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="68" column="24" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="68" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a519d07501fb589ea0570fa4df20f9333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_boolean</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_boolean</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is boolean value (bool) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is integer, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="80" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="80" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1ab280e1aba12fab895a28ac1ac6b81c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_char</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_char</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is char value (char) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is char, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="92" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="92" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1ae3bed631492421ecc855b2c18aab5ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_integer</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_integer</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is integer value (bool, char, short, int, long) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is integer, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="104" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="104" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a14d796fa6e1f318f817223e58251872f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_decimal</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_decimal</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is decimal value (float, double) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is decimal, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="116" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="116" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1aca0570987b53ecfdf6b0377d4ea7059c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_string</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_string</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is string value (char *) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is string, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="128" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="128" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a88072fb199a034f1baa58fe70d2e653b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_buffer</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_buffer</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is buffer value (void *) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is buffer, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="140" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="140" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1aa3d7117c366bc6a799489b02c0e8ee03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_array</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_array</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is array of values (value *) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is array, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="152" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="152" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1ac5a3619e7125685a5f902bd96de1f119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_map</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_map</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is map of values (string -&gt; value) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is map, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="164" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="164" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a42604e0515d0e9338dbf481e5646e78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_ptr</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_ptr</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is pointer value (void *) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is pointer, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="176" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="176" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a4f603ae6633c5ecdfdf5fed6c78e267c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_future</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_future</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is future value (future) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is future, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="188" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="188" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a4c5a9df79f792dd718ff8fd5068bd66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_function</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_function</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is function value (function) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is function, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="200" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="200" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a5c0cc84d028d219ff2a5a566919cfd93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_null</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_null</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is pointer value NULL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is null, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="212" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="212" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a0c7710b09d98a37d7f88ce1e6557c741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_class</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_class</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is class value (class) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is class, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="224" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="224" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a05f4a4aeedcdb1df98b0e58bd1b4bb0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_object</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_object</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is object value (object) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is object, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="236" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="236" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1ad2213185c87afbf070b8c54b01d5711b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_exception</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_exception</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is exception value (error type) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is exception, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="248" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="248" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a71b119868db3cf99e8b5f42fb028e922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_throwable</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_throwable</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is throwable value (thrown type) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is throwable, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="260" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="260" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="reflect__type__id_8h_1a68be2eac98b9db19a21d4f2d71e56659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API int</type>
        <definition>REFLECT_API int type_id_invalid</definition>
        <argsstring>(type_id id)</argsstring>
        <name>type_id_invalid</name>
        <param>
          <type><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if type id is invalid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Type id to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero if type is invalid, different from zero otherwhise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" line="272" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h" declline="272" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Reflect<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>library<sp/>for<sp/>provide<sp/>reflection<sp/>and<sp/>metadata<sp/>representation.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2024<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>REFLECT_TYPE_ID_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFLECT_TYPE_ID_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;reflect/reflect_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaae" kindref="member">type_primitive_id</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3e0f738756c5205d71c69d955603f46c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3e0f738756c5205d71c69d955603f46c" kindref="member">TYPE_BOOL</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="33" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea2c8735de6cf799483eefed0e90a386f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea2c8735de6cf799483eefed0e90a386f5" kindref="member">TYPE_CHAR</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="34" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea054c36101e4cd86983d1683871e65dd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea054c36101e4cd86983d1683871e65dd1" kindref="member">TYPE_SHORT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="35" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4fcd4421533bb21c827865bdbac4fef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4fcd4421533bb21c827865bdbac4fef9" kindref="member">TYPE_INT</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="36" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4ae533852f8003c3e6e568a79cc35388" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4ae533852f8003c3e6e568a79cc35388" kindref="member">TYPE_LONG</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="37" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea19a0a402d33a2e049e91ea9e37e90c2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea19a0a402d33a2e049e91ea9e37e90c2f" kindref="member">TYPE_FLOAT</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="38" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea019d94f7c571e36215cc1a41e825de0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea019d94f7c571e36215cc1a41e825de0c" kindref="member">TYPE_DOUBLE</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="39" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeaddb4be6b1cc25112defabef75f73427a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeaddb4be6b1cc25112defabef75f73427a" kindref="member">TYPE_STRING</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="40" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea723ecdbb4295e88f08e7594fa8f1afac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea723ecdbb4295e88f08e7594fa8f1afac" kindref="member">TYPE_BUFFER</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="41" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead189c0a53681ec74eeea1f56d08d741f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead189c0a53681ec74eeea1f56d08d741f" kindref="member">TYPE_ARRAY</ref><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="42" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead2aa4ac68ee62f30544d0f7c9d16a027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaead2aa4ac68ee62f30544d0f7c9d16a027" kindref="member">TYPE_MAP</ref><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="43" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea311715f465e358409d513be004f82b2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea311715f465e358409d513be004f82b2f" kindref="member">TYPE_PTR</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="44" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3db131537bcaa214a88f6013458eae22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea3db131537bcaa214a88f6013458eae22" kindref="member">TYPE_FUTURE</ref><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="45" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae40264fa7bcc3bc4091d70ddd42bd542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae40264fa7bcc3bc4091d70ddd42bd542" kindref="member">TYPE_FUNCTION</ref><sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="46" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea174c14bf485cb83d7bb06493dc9c4eef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea174c14bf485cb83d7bb06493dc9c4eef" kindref="member">TYPE_NULL</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="47" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae3c05d01e5713b8e32e46fb33c279e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeae3c05d01e5713b8e32e46fb33c279e62" kindref="member">TYPE_CLASS</ref><sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="48" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea43aef6302e2b8ee4efdd9ca87636d7c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea43aef6302e2b8ee4efdd9ca87636d7c8" kindref="member">TYPE_OBJECT</ref><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="49" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4f7005aa6681a4f86d2e300e08de3720" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea4f7005aa6681a4f86d2e300e08de3720" kindref="member">TYPE_EXCEPTION</ref><sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="50" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafb9861ae2a8e03986ea83de85a3d066f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafb9861ae2a8e03986ea83de85a3d066f" kindref="member">TYPE_THROWABLE</ref><sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea616b31034d047757e1c557b7dbd0f63f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaea616b31034d047757e1c557b7dbd0f63f" kindref="member">TYPE_SIZE</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafeec3d92b10ebeaa68bbb56e4d08691c" kindref="member">TYPE_INVALID</ref></highlight></codeline>
<codeline lineno="54" refid="reflect__type__id_8h_1aac3b36ca5262794cb8accfef6a2bcaaeafeec3d92b10ebeaa68bbb56e4d08691c" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*<sp/><sp/><sp/><sp/>Obtain<sp/>a<sp/>human<sp/>readable<sp/>form<sp/>of<sp/>the<sp/>type<sp/>id<sp/>@id</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>converted<sp/>into<sp/>string</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*</highlight></codeline>
<codeline lineno="65"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="66"><highlight class="comment">*<sp/><sp/><sp/><sp/>String<sp/>representing<sp/>a<sp/>readable<sp/>name<sp/>for<sp/>@id</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="reflect__type__id_8h_1a70e9080600bdc3c5dc1965c4312c3cd1" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="reflect__type__id_8h_1a70e9080600bdc3c5dc1965c4312c3cd1" kindref="member">type_id_name</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>boolean<sp/>value<sp/>(bool)</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>integer,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="reflect__type__id_8h_1a519d07501fb589ea0570fa4df20f9333" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a519d07501fb589ea0570fa4df20f9333" kindref="member">type_id_boolean</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="84"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>char<sp/>value<sp/>(char)</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*</highlight></codeline>
<codeline lineno="86"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="88"><highlight class="comment">*</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>char,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="reflect__type__id_8h_1ab280e1aba12fab895a28ac1ac6b81c9d" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1ab280e1aba12fab895a28ac1ac6b81c9d" kindref="member">type_id_char</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>integer<sp/>value<sp/>(bool,<sp/>char,<sp/>short,<sp/>int,<sp/>long)</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="100"><highlight class="comment">*</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>integer,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="reflect__type__id_8h_1ae3bed631492421ecc855b2c18aab5ebe" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1ae3bed631492421ecc855b2c18aab5ebe" kindref="member">type_id_integer</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="108"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>decimal<sp/>value<sp/>(float,<sp/>double)</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="111"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>decimal,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="reflect__type__id_8h_1a14d796fa6e1f318f817223e58251872f" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a14d796fa6e1f318f817223e58251872f" kindref="member">type_id_decimal</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="119"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>string<sp/>value<sp/>(char<sp/>*)</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>string,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="reflect__type__id_8h_1aca0570987b53ecfdf6b0377d4ea7059c" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1aca0570987b53ecfdf6b0377d4ea7059c" kindref="member">type_id_string</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="131"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="132"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>buffer<sp/>value<sp/>(void<sp/>*)</highlight></codeline>
<codeline lineno="133"><highlight class="comment">*</highlight></codeline>
<codeline lineno="134"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="135"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="136"><highlight class="comment">*</highlight></codeline>
<codeline lineno="137"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>buffer,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="reflect__type__id_8h_1a88072fb199a034f1baa58fe70d2e653b" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a88072fb199a034f1baa58fe70d2e653b" kindref="member">type_id_buffer</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="143"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="144"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>array<sp/>of<sp/>values<sp/>(value<sp/>*)</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*</highlight></codeline>
<codeline lineno="146"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="148"><highlight class="comment">*</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="150"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>array,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="151"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="reflect__type__id_8h_1aa3d7117c366bc6a799489b02c0e8ee03" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1aa3d7117c366bc6a799489b02c0e8ee03" kindref="member">type_id_array</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="155"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="156"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>map<sp/>of<sp/>values<sp/>(string<sp/>-&gt;<sp/>value)</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="159"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="162"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>map,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="163"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="reflect__type__id_8h_1ac5a3619e7125685a5f902bd96de1f119" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1ac5a3619e7125685a5f902bd96de1f119" kindref="member">type_id_map</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="167"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="168"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>pointer<sp/>value<sp/>(void<sp/>*)</highlight></codeline>
<codeline lineno="169"><highlight class="comment">*</highlight></codeline>
<codeline lineno="170"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="171"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="172"><highlight class="comment">*</highlight></codeline>
<codeline lineno="173"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>pointer,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="175"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="reflect__type__id_8h_1a42604e0515d0e9338dbf481e5646e78a" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a42604e0515d0e9338dbf481e5646e78a" kindref="member">type_id_ptr</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="179"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="180"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>future<sp/>value<sp/>(future)</highlight></codeline>
<codeline lineno="181"><highlight class="comment">*</highlight></codeline>
<codeline lineno="182"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="183"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="184"><highlight class="comment">*</highlight></codeline>
<codeline lineno="185"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="186"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>future,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="187"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="reflect__type__id_8h_1a4f603ae6633c5ecdfdf5fed6c78e267c" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a4f603ae6633c5ecdfdf5fed6c78e267c" kindref="member">type_id_future</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="191"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="192"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>function<sp/>value<sp/>(function)</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="195"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="196"><highlight class="comment">*</highlight></codeline>
<codeline lineno="197"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="198"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>function,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="199"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="reflect__type__id_8h_1a4c5a9df79f792dd718ff8fd5068bd66f" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a4c5a9df79f792dd718ff8fd5068bd66f" kindref="member">type_id_function</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="204"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>pointer<sp/>value<sp/>NULL</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="208"><highlight class="comment">*</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>null,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="reflect__type__id_8h_1a5c0cc84d028d219ff2a5a566919cfd93" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a5c0cc84d028d219ff2a5a566919cfd93" kindref="member">type_id_null</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>class<sp/>value<sp/>(class)</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="219"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="220"><highlight class="comment">*</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="222"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>class,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="reflect__type__id_8h_1a0c7710b09d98a37d7f88ce1e6557c741" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a0c7710b09d98a37d7f88ce1e6557c741" kindref="member">type_id_class</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="227"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="228"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>object<sp/>value<sp/>(object)</highlight></codeline>
<codeline lineno="229"><highlight class="comment">*</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="231"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="232"><highlight class="comment">*</highlight></codeline>
<codeline lineno="233"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>object,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="reflect__type__id_8h_1a05f4a4aeedcdb1df98b0e58bd1b4bb0b" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a05f4a4aeedcdb1df98b0e58bd1b4bb0b" kindref="member">type_id_object</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="239"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="240"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>exception<sp/>value<sp/>(error<sp/>type)</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="243"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>exception,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="247"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="reflect__type__id_8h_1ad2213185c87afbf070b8c54b01d5711b" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1ad2213185c87afbf070b8c54b01d5711b" kindref="member">type_id_exception</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="250"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="251"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="252"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>throwable<sp/>value<sp/>(thrown<sp/>type)</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>throwable,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="reflect__type__id_8h_1a71b119868db3cf99e8b5f42fb028e922" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a71b119868db3cf99e8b5f42fb028e922" kindref="member">type_id_throwable</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="263"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="264"><highlight class="comment">*<sp/><sp/><sp/><sp/>Check<sp/>if<sp/>type<sp/>id<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="265"><highlight class="comment">*</highlight></codeline>
<codeline lineno="266"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>id</highlight></codeline>
<codeline lineno="267"><highlight class="comment">*<sp/><sp/><sp/><sp/>Type<sp/>id<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="268"><highlight class="comment">*</highlight></codeline>
<codeline lineno="269"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="270"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>if<sp/>type<sp/>is<sp/>invalid,<sp/>different<sp/>from<sp/>zero<sp/>otherwhise</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="reflect__type__id_8h_1a68be2eac98b9db19a21d4f2d71e56659" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="reflect__type__id_8h_1a68be2eac98b9db19a21d4f2d71e56659" kindref="member">type_id_invalid</ref>(<ref refid="reflect__type__id_8h_1a63f97c5b1281063207c427df64d28950" kindref="member">type_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>REFLECT_TYPE_ID_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_type_id.h"/>
  </compounddef>
</doxygen>

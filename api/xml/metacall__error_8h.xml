<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="metacall__error_8h" kind="file" language="C++">
    <compoundname>metacall_error.h</compoundname>
    <includes local="no">metacall/metacall_api.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="metacall_8h" local="no">metacall.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>metacall/metacall_api.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>metacall_error.h</label>
        <link refid="metacall__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
      </node>
      <node id="1">
        <label>metacall_error.h</label>
        <link refid="metacall__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>metacall.h</label>
        <link refid="metacall_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmetacall__exception__type" prot="public">metacall_exception_type</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="metacall__error_8h_1ad625b3c239283e3c12756f4771c29c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>METACALL_API int</type>
        <definition>METACALL_API int metacall_error_from_value</definition>
        <argsstring>(void *v, metacall_exception ex)</argsstring>
        <name>metacall_error_from_value</name>
        <param>
          <type>void *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>metacall_exception</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
<para>Retrieve the exception from a value, it can be either a throwable value with an exception inside or an exception itself. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value that represents the exception to be retrieved</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ex</parametername>
</parameternamelist>
<parameterdescription>
<para>Exception that will be used as out parameter, the lifetime of the struct fields is attached to @v</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, different from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" line="65" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" declline="65" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="metacall__error_8h_1a274ab562da16a9a35c27d7b67f448fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>METACALL_API int</type>
        <definition>METACALL_API int metacall_error_last</definition>
        <argsstring>(metacall_exception ex)</argsstring>
        <name>metacall_error_last</name>
        <param>
          <type>metacall_exception</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
<para>Retrieve last error that has happened after a call to any API from MetaCall. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ex</parametername>
</parameternamelist>
<parameterdescription>
<para>Exception that will be used as out parameter, the lifetime of the struct fields is attached to the internal MetaCall exception</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, different from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" line="77" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" declline="77" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="metacall__error_8h_1a88937f1af9da6218448382ba9f0a2343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>METACALL_API void</type>
        <definition>METACALL_API void metacall_error_clear</definition>
        <argsstring>(void)</argsstring>
        <name>metacall_error_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear last error that has happened after a call to any API from MetaCall. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" line="83" column="19" declfile="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h" declline="83" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>MetaCall<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>library<sp/>for<sp/>providing<sp/>a<sp/>foreign<sp/>function<sp/>interface<sp/>calls.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2022<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>METACALL_ERROR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METACALL_ERROR_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Headers<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;metacall/metacall_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Headers<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Member<sp/>Data<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structmetacall__exception__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmetacall__exception__type" kindref="compound">metacall_exception_type</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structmetacall__exception__type_1a7146e985a1d7cfe8c7bfa8623a665162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structmetacall__exception__type_1a7146e985a1d7cfe8c7bfa8623a665162" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="41" refid="structmetacall__exception__type_1a8ccac224a658bc154eaea128930f2b7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structmetacall__exception__type_1a8ccac224a658bc154eaea128930f2b7e" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="42" refid="structmetacall__exception__type_1acf592d3ceb3fa5f8eb24de2f877a0887" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structmetacall__exception__type_1acf592d3ceb3fa5f8eb24de2f877a0887" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="43" refid="structmetacall__exception__type_1a451a71cd75d3d89c64d3239960d2d302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structmetacall__exception__type_1a451a71cd75d3d89c64d3239960d2d302" kindref="member">stacktrace</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Type<sp/>Definitions<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmetacall__exception__type" kindref="compound">metacall_exception_type</ref><sp/>*metacall_exception;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Methods<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/><sp/><sp/><sp/>Retrieve<sp/>the<sp/>exception<sp/>from<sp/>a<sp/>value,<sp/>it<sp/>can<sp/>be<sp/>either<sp/>a<sp/>throwable<sp/>value<sp/>with<sp/>an<sp/>exception<sp/>inside<sp/>or<sp/>an<sp/>exception<sp/>itself</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>v</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/><sp/><sp/><sp/>Value<sp/>that<sp/>represents<sp/>the<sp/>exception<sp/>to<sp/>be<sp/>retrieved</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*<sp/><sp/>@param[out]<sp/>ex</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*<sp/><sp/><sp/><sp/>Exception<sp/>that<sp/>will<sp/>be<sp/>used<sp/>as<sp/>out<sp/>parameter,<sp/>the<sp/>lifetime<sp/>of<sp/>the<sp/>struct<sp/>fields<sp/>is<sp/>attached<sp/>to<sp/>@v</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*<sp/><sp/><sp/><sp/>Zero<sp/>if<sp/>success,<sp/>different<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="metacall__error_8h_1ad625b3c239283e3c12756f4771c29c02" refkind="member"><highlight class="normal">METACALL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metacall__error_8h_1ad625b3c239283e3c12756f4771c29c02" kindref="member">metacall_error_from_value</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*v,<sp/>metacall_exception<sp/>ex);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/><sp/><sp/><sp/>Retrieve<sp/>last<sp/>error<sp/>that<sp/>has<sp/>happened<sp/>after<sp/>a<sp/>call<sp/>to<sp/>any<sp/>API<sp/>from<sp/>MetaCall</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/><sp/>@param[out]<sp/>ex</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/><sp/><sp/><sp/>Exception<sp/>that<sp/>will<sp/>be<sp/>used<sp/>as<sp/>out<sp/>parameter,<sp/>the<sp/>lifetime<sp/>of<sp/>the<sp/>struct<sp/>fields<sp/>is<sp/>attached<sp/>to<sp/>the<sp/>internal<sp/>MetaCall<sp/>exception</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/>Zero<sp/>if<sp/>success,<sp/>different<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="metacall__error_8h_1a274ab562da16a9a35c27d7b67f448fd2" refkind="member"><highlight class="normal">METACALL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metacall__error_8h_1a274ab562da16a9a35c27d7b67f448fd2" kindref="member">metacall_error_last</ref>(metacall_exception<sp/>ex);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*<sp/><sp/><sp/><sp/>Clear<sp/>last<sp/>error<sp/>that<sp/>has<sp/>happened<sp/>after<sp/>a<sp/>call<sp/>to<sp/>any<sp/>API<sp/>from<sp/>MetaCall</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="metacall__error_8h_1a88937f1af9da6218448382ba9f0a2343" refkind="member"><highlight class="normal">METACALL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="metacall__error_8h_1a88937f1af9da6218448382ba9f0a2343" kindref="member">metacall_error_clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>METACALL_ERROR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/metacall/include/metacall/metacall_error.h"/>
  </compounddef>
</doxygen>

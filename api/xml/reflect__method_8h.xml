<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="reflect__method_8h" kind="file" language="C++">
    <compoundname>reflect_method.h</compoundname>
    <includes local="no">reflect/reflect_api.h</includes>
    <includes refid="reflect__class__decl_8h" local="no">reflect/reflect_class_decl.h</includes>
    <includes refid="reflect__class__visibility_8h" local="no">reflect/reflect_class_visibility.h</includes>
    <includes refid="reflect__async_8h" local="no">reflect/reflect_async.h</includes>
    <includes refid="reflect__signature_8h" local="no">reflect/reflect_signature.h</includes>
    <includes refid="reflect__method__decl_8h" local="no">reflect/reflect_method_decl.h</includes>
    <includedby refid="reflect__class_8h" local="no">reflect_class.h</includedby>
    <includedby refid="reflect__object_8h" local="no">reflect_object.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>reflect/reflect_class_visibility.h</label>
        <link refid="reflect__class__visibility_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>reflect/reflect_method_decl.h</label>
        <link refid="reflect__method__decl_8h"/>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>preprocessor/preprocessor_concatenation.h</label>
        <link refid="preprocessor__concatenation_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>reflect/reflect_type.h</label>
        <link refid="reflect__type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reflect_method.h</label>
        <link refid="reflect__method_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>reflect/reflect_type_id.h</label>
        <link refid="reflect__type__id_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>reflect/reflect_value.h</label>
        <link refid="reflect__value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reflect/reflect_api.h</label>
      </node>
      <node id="8">
        <label>preprocessor/preprocessor_api.h</label>
      </node>
      <node id="3">
        <label>reflect/reflect_class_decl.h</label>
        <link refid="reflect__class__decl_8h"/>
      </node>
      <node id="10">
        <label>reflect/reflect_signature.h</label>
        <link refid="reflect__signature_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>reflect/reflect_async.h</label>
        <link refid="reflect__async_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>plugin_interface.hpp</label>
        <link refid="plugin__interface_8hpp"/>
      </node>
      <node id="2">
        <label>reflect_class.h</label>
        <link refid="reflect__class_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>reflect_object.h</label>
        <link refid="reflect__object_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reflect_method.h</label>
        <link refid="reflect__method_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>reflect_value_type.h</label>
        <link refid="reflect__value__type_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>reflect.h</label>
        <link refid="reflect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="reflect__method_8h_1a3f47cf8dc8702d839782af6f4abb3b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
        <definition>REFLECT_API method method_create</definition>
        <argsstring>(klass cls, const char *name, size_t args_count, method_impl impl, enum class_visibility_id visibility, enum async_id async, method_impl_interface_singleton singleton)</argsstring>
        <name>method_create</name>
        <param>
          <type><ref refid="reflect__class__decl_8h_1ae0333cc8abac5fba6baa3bb523242fcc" kindref="member">klass</ref></type>
          <declname>cls</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>args_count</declname>
        </param>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab46197f395c1bd7bbaba9b3376e7eb22" kindref="member">method_impl</ref></type>
          <declname>impl</declname>
        </param>
        <param>
          <type>enum <ref refid="reflect__class__visibility_8h_1a9c1f4542578dfdde3d46db231b4ea37b" kindref="member">class_visibility_id</ref></type>
          <declname>visibility</declname>
        </param>
        <param>
          <type>enum <ref refid="reflect__async_8h_1a00906375bbe7dbe8f9db5b3a3f8f8586" kindref="member">async_id</ref></type>
          <declname>async</declname>
        </param>
        <param>
          <type><ref refid="reflect__method__decl_8h_1a404f71076eca66c871aa28c3ec7f51e6" kindref="member">method_impl_interface_singleton</ref></type>
          <declname>singleton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="38" column="20" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="38" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a9d51a01b9d2a89a044cbb40c0dcb60c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__class__decl_8h_1ae0333cc8abac5fba6baa3bb523242fcc" kindref="member">klass</ref></type>
        <definition>REFLECT_API klass method_class</definition>
        <argsstring>(method m)</argsstring>
        <name>method_class</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="40" column="19" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="40" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a9fbe596906113e1cb220229b44eec11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API char *</type>
        <definition>REFLECT_API char* method_name</definition>
        <argsstring>(method m)</argsstring>
        <name>method_name</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="42" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="42" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a3b2b59daa56c1be1b1d807afd80c6af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__signature_8h_1a904c133c8548528df8a52a5a6baa0f44" kindref="member">signature</ref></type>
        <definition>REFLECT_API signature method_signature</definition>
        <argsstring>(method m)</argsstring>
        <name>method_signature</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="44" column="23" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="44" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a1ead81f9a91885c59a64c6bc5b713bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__method__decl_8h_1ab46197f395c1bd7bbaba9b3376e7eb22" kindref="member">method_impl</ref></type>
        <definition>REFLECT_API method_impl method_data</definition>
        <argsstring>(method m)</argsstring>
        <name>method_data</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="46" column="25" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="46" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1af8692f3fe5fc4b35fa58032831e7ebb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API enum <ref refid="reflect__class__visibility_8h_1a9c1f4542578dfdde3d46db231b4ea37b" kindref="member">class_visibility_id</ref></type>
        <definition>REFLECT_API enum class_visibility_id method_visibility</definition>
        <argsstring>(method m)</argsstring>
        <name>method_visibility</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="48" column="1" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="48" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1ae2a3b59f69e4756e455cf80a45042fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API enum <ref refid="reflect__async_8h_1a00906375bbe7dbe8f9db5b3a3f8f8586" kindref="member">async_id</ref></type>
        <definition>REFLECT_API enum async_id method_async</definition>
        <argsstring>(method m)</argsstring>
        <name>method_async</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="50" column="1" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="50" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a8313c936afdc1d651a5d12cf86218cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API <ref refid="reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a" kindref="member">value</ref></type>
        <definition>REFLECT_API value method_metadata</definition>
        <argsstring>(method m)</argsstring>
        <name>method_metadata</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="52" column="19" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="52" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="reflect__method_8h_1a508bdf711fefe65854bd2a0282d7d8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>REFLECT_API void</type>
        <definition>REFLECT_API void method_destroy</definition>
        <argsstring>(method m)</argsstring>
        <name>method_destroy</name>
        <param>
          <type><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" line="54" column="18" declfile="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h" declline="54" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Reflect<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>library<sp/>for<sp/>provide<sp/>reflection<sp/>and<sp/>metadata<sp/>representation.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2024<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>REFLECT_METHOD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REFLECT_METHOD_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;reflect/reflect_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__class__decl_8h" kindref="compound">reflect/reflect_class_decl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__class__visibility_8h" kindref="compound">reflect/reflect_class_visibility.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__async_8h" kindref="compound">reflect/reflect_async.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__signature_8h" kindref="compound">reflect/reflect_signature.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reflect__method__decl_8h" kindref="compound">reflect/reflect_method_decl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="reflect__method_8h_1a3f47cf8dc8702d839782af6f4abb3b4b" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/><ref refid="reflect__method_8h_1a3f47cf8dc8702d839782af6f4abb3b4b" kindref="member">method_create</ref>(<ref refid="reflect__class__decl_8h_1ae0333cc8abac5fba6baa3bb523242fcc" kindref="member">klass</ref><sp/>cls,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>args_count,<sp/><ref refid="reflect__method__decl_8h_1ab46197f395c1bd7bbaba9b3376e7eb22" kindref="member">method_impl</ref><sp/>impl,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="reflect__class__visibility_8h_1a9c1f4542578dfdde3d46db231b4ea37b" kindref="member">class_visibility_id</ref><sp/>visibility,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="reflect__async_8h_1a00906375bbe7dbe8f9db5b3a3f8f8586" kindref="member">async_id</ref><sp/>async,<sp/><ref refid="reflect__method__decl_8h_1a404f71076eca66c871aa28c3ec7f51e6" kindref="member">method_impl_interface_singleton</ref><sp/>singleton);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="reflect__method_8h_1a9d51a01b9d2a89a044cbb40c0dcb60c7" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__class__decl_8h_1ae0333cc8abac5fba6baa3bb523242fcc" kindref="member">klass</ref><sp/><ref refid="reflect__method_8h_1a9d51a01b9d2a89a044cbb40c0dcb60c7" kindref="member">method_class</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="reflect__method_8h_1a9fbe596906113e1cb220229b44eec11a" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="reflect__method_8h_1a9fbe596906113e1cb220229b44eec11a" kindref="member">method_name</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="reflect__method_8h_1a3b2b59daa56c1be1b1d807afd80c6af7" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__signature_8h_1a904c133c8548528df8a52a5a6baa0f44" kindref="member">signature</ref><sp/><ref refid="reflect__method_8h_1a3b2b59daa56c1be1b1d807afd80c6af7" kindref="member">method_signature</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="reflect__method_8h_1a1ead81f9a91885c59a64c6bc5b713bc6" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__method__decl_8h_1ab46197f395c1bd7bbaba9b3376e7eb22" kindref="member">method_impl</ref><sp/><ref refid="reflect__method_8h_1a1ead81f9a91885c59a64c6bc5b713bc6" kindref="member">method_data</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="reflect__method_8h_1af8692f3fe5fc4b35fa58032831e7ebb9" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal">_visibility_id<sp/><ref refid="reflect__method_8h_1af8692f3fe5fc4b35fa58032831e7ebb9" kindref="member">method_visibility</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="reflect__method_8h_1ae2a3b59f69e4756e455cf80a45042fdc" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="reflect__async_8h_1a00906375bbe7dbe8f9db5b3a3f8f8586" kindref="member">async_id</ref><sp/><ref refid="reflect__method_8h_1ae2a3b59f69e4756e455cf80a45042fdc" kindref="member">method_async</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="reflect__method_8h_1a8313c936afdc1d651a5d12cf86218cc1" refkind="member"><highlight class="normal">REFLECT_API<sp/><ref refid="reflect__value_8h_1a54c528809d1b8a4d229f655f96b2433a" kindref="member">value</ref><sp/><ref refid="reflect__method_8h_1a8313c936afdc1d651a5d12cf86218cc1" kindref="member">method_metadata</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="reflect__method_8h_1a508bdf711fefe65854bd2a0282d7d8b2" refkind="member"><highlight class="normal">REFLECT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="reflect__method_8h_1a508bdf711fefe65854bd2a0282d7d8b2" kindref="member">method_destroy</ref>(<ref refid="reflect__method__decl_8h_1ab9667ce29073b9704dc2c613c3ca3122" kindref="member">method</ref><sp/>m);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>REFLECT_METHOD_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/reflect/include/reflect/reflect_method.h"/>
  </compounddef>
</doxygen>

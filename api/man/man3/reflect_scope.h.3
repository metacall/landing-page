.TH "reflect_scope.h" 3 "Tue Oct 26 2021" "Version 0.1.0.44b1ab3b98a6" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
reflect_scope.h
.SH SYNOPSIS
.br
.PP
\fC#include <reflect/reflect_api\&.h>\fP
.br
\fC#include <reflect/reflect_function\&.h>\fP
.br
\fC#include <reflect/reflect_type\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef size_t \fBscope_stack_ptr\fP"
.br
.ti -1c
.RI "typedef struct scope_type * \fBscope\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "REFLECT_API \fBscope\fP \fBscope_create\fP (const char *name)"
.br
.ti -1c
.RI "REFLECT_API size_t \fBscope_size\fP (\fBscope\fP sp)"
.br
.ti -1c
.RI "REFLECT_API int \fBscope_define\fP (\fBscope\fP sp, const char *key, \fBvalue\fP obj)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBscope_metadata\fP (\fBscope\fP sp)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBscope_export\fP (\fBscope\fP sp)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBscope_get\fP (\fBscope\fP sp, const char *key)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBscope_undef\fP (\fBscope\fP sp, const char *key)"
.br
.ti -1c
.RI "REFLECT_API int \fBscope_append\fP (\fBscope\fP dest, \fBscope\fP src)"
.br
.ti -1c
.RI "REFLECT_API int \fBscope_contains\fP (\fBscope\fP dest, \fBscope\fP src, char **duplicated)"
.br
.ti -1c
.RI "REFLECT_API int \fBscope_remove\fP (\fBscope\fP dest, \fBscope\fP src)"
.br
.ti -1c
.RI "REFLECT_API size_t * \fBscope_stack_return\fP (\fBscope\fP sp)"
.br
.ti -1c
.RI "REFLECT_API \fBscope_stack_ptr\fP \fBscope_stack_push\fP (\fBscope\fP sp, size_t bytes)"
.br
.ti -1c
.RI "REFLECT_API void * \fBscope_stack_get\fP (\fBscope\fP sp, \fBscope_stack_ptr\fP stack_ptr)"
.br
.ti -1c
.RI "REFLECT_API int \fBscope_stack_pop\fP (\fBscope\fP sp)"
.br
.ti -1c
.RI "REFLECT_API void \fBscope_destroy\fP (\fBscope\fP sp)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef size_t \fBscope_stack_ptr\fP"

.SS "typedef struct scope_type* \fBscope\fP"

.SH "Function Documentation"
.PP 
.SS "REFLECT_API \fBscope\fP scope_create (const char * name)"

.SS "REFLECT_API size_t scope_size (\fBscope\fP sp)"

.SS "REFLECT_API int scope_define (\fBscope\fP sp, const char * key, \fBvalue\fP obj)"

.SS "REFLECT_API \fBvalue\fP scope_metadata (\fBscope\fP sp)"

.SS "REFLECT_API \fBvalue\fP scope_export (\fBscope\fP sp)"

.SS "REFLECT_API \fBvalue\fP scope_get (\fBscope\fP sp, const char * key)"

.SS "REFLECT_API \fBvalue\fP scope_undef (\fBscope\fP sp, const char * key)"

.SS "REFLECT_API int scope_append (\fBscope\fP dest, \fBscope\fP src)"

.SS "REFLECT_API int scope_contains (\fBscope\fP dest, \fBscope\fP src, char ** duplicated)"

.SS "REFLECT_API int scope_remove (\fBscope\fP dest, \fBscope\fP src)"

.SS "REFLECT_API size_t* scope_stack_return (\fBscope\fP sp)"

.SS "REFLECT_API \fBscope_stack_ptr\fP scope_stack_push (\fBscope\fP sp, size_t bytes)"

.SS "REFLECT_API void* scope_stack_get (\fBscope\fP sp, \fBscope_stack_ptr\fP stack_ptr)"

.SS "REFLECT_API int scope_stack_pop (\fBscope\fP sp)"

.SS "REFLECT_API void scope_destroy (\fBscope\fP sp)"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

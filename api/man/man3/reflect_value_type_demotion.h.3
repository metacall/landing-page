.TH "reflect_value_type_demotion.h" 3 "Sat Dec 30 2023" "Version 0.7.5.34b28423138e" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
reflect_value_type_demotion.h
.SH SYNOPSIS
.br
.PP
\fC#include <reflect/reflect_api\&.h>\fP
.br
\fC#include <reflect/reflect_type_id\&.h>\fP
.br
\fC#include <reflect/reflect_value\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvalue\fP \fBvalue_type_demotion_boolean\fP (\fBvalue\fP v, \fBtype_id\fP id)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBvalue_type_demotion_integer\fP (\fBvalue\fP v, \fBtype_id\fP id)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBvalue_type_demotion_decimal\fP (\fBvalue\fP v, \fBtype_id\fP id)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBvalue\fP value_type_demotion_boolean (\fBvalue\fP v, \fBtype_id\fP id)"

.PP
Demotes a boolean value @v to new type @id\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIid\fP New type id of value to be demoted
.RE
.PP
\fBReturns\fP
.RS 4
Demoted value if a valid demotion, or @v if value is already demoted, null otherwhise 
.RE
.PP

.SS "REFLECT_API \fBvalue\fP value_type_demotion_integer (\fBvalue\fP v, \fBtype_id\fP id)"

.PP
Demotes a integer value @v to new type @id\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIid\fP New type id of value to be demoted
.RE
.PP
\fBReturns\fP
.RS 4
Demoted value if a valid demotion, or @v if value is already demoted, null otherwhise 
.RE
.PP

.SS "REFLECT_API \fBvalue\fP value_type_demotion_decimal (\fBvalue\fP v, \fBtype_id\fP id)"

.PP
Demotes a decimal value @v to new type @id\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIid\fP New type id of value to be demoted
.RE
.PP
\fBReturns\fP
.RS 4
Demoted value if a valid demotion, or @v if value is already demoted, null otherwhise 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

.TH "reflect_memory_tracker.h" 3 "Mon Mar 25 2024" "Version 0.7.11.12f31bd02db2" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
reflect_memory_tracker.h
.SH SYNOPSIS
.br
.PP
\fC#include <reflect/reflect_api\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBreflect_memory_tracker\fP(name)   		typedef char reflect_memory_tracker_disabled"
.br
.ti -1c
.RI "#define \fBreflect_memory_tracker_allocation\fP(name)"
.br
.ti -1c
.RI "#define \fBreflect_memory_tracker_deallocation\fP(name)"
.br
.ti -1c
.RI "#define \fBreflect_memory_tracker_increment\fP(name)"
.br
.ti -1c
.RI "#define \fBreflect_memory_tracker_decrement\fP(name)"
.br
.ti -1c
.RI "#define \fBreflect_memory_tracker_print\fP(name,  title)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBreflect_memory_tracker_debug\fP (void)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define reflect_memory_tracker(name)   		typedef char reflect_memory_tracker_disabled"

.SS "#define reflect_memory_tracker_allocation(name)"
\fBValue:\fP
.PP
.nf
      do \
        { \
        } while (0)
.fi
.SS "#define reflect_memory_tracker_deallocation(name)"
\fBValue:\fP
.PP
.nf
       do \
        { \
        } while (0)
.fi
.SS "#define reflect_memory_tracker_increment(name)"
\fBValue:\fP
.PP
.nf
      do \
        { \
        } while (0)
.fi
.SS "#define reflect_memory_tracker_decrement(name)"
\fBValue:\fP
.PP
.nf
      do \
        { \
        } while (0)
.fi
.SS "#define reflect_memory_tracker_print(name, title)"
\fBValue:\fP
.PP
.nf
       do \
        { \
        } while (0)
.fi
.SH "Function Documentation"
.PP 
.SS "void reflect_memory_tracker_debug (void)"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

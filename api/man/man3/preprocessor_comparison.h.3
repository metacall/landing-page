.TH "preprocessor_comparison.h" 3 "Thu Feb 8 2024" "Version 0.7.7.251ee5582288" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
preprocessor_comparison.h
.SH SYNOPSIS
.br
.PP
\fC#include <preprocessor/preprocessor_api\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_bit\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_concatenation\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_detection\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_empty\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_if\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPREPROCESSOR_COMPARE_IMPL\fP(left,  right)"
.br
.ti -1c
.RI "#define \fBPREPROCESSOR_NOT_EQUAL\fP(left,  right)"
.br
.ti -1c
.RI "#define \fBPREPROCESSOR_EQUAL\fP(left,  right)   	\fBPREPROCESSOR_COMPL\fP(\fBPREPROCESSOR_NOT_EQUAL\fP(left, right))"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define PREPROCESSOR_COMPARE_IMPL(left, right)"
\fBValue:\fP
.PP
.nf
   PREPROCESSOR_DETECT_PARENTHESIS(           \
        PREPROCESSOR_COMPARE_##left(PREPROCESSOR_COMPARE_##right)(()))
.fi
.SS "#define PREPROCESSOR_NOT_EQUAL(left, right)"
\fBValue:\fP
.PP
.nf
 PREPROCESSOR_IF_IMPL(                                                                                  \
        PREPROCESSOR_BIT_AND(PREPROCESSOR_DETECT_COMPARABLE(left))(PREPROCESSOR_DETECT_COMPARABLE(right)), \
        PREPROCESSOR_COMPARE_IMPL,                                                                         \
        1 PREPROCESSOR_EMPTY_EXPANSION_VARIADIC)                                                           \
    (left, right)
.fi
.SS "#define PREPROCESSOR_EQUAL(left, right)   	\fBPREPROCESSOR_COMPL\fP(\fBPREPROCESSOR_NOT_EQUAL\fP(left, right))"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

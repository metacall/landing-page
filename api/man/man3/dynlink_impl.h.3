.TH "dynlink_impl.h" 3 "Sat Dec 30 2023" "Version 0.7.5.34b28423138e" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dynlink_impl.h
.SH SYNOPSIS
.br
.PP
\fC#include <dynlink/dynlink_api\&.h>\fP
.br
\fC#include <dynlink/dynlink_type\&.h>\fP
.br
\fC#include <dynlink/dynlink_impl_name\&.h>\fP
.br
\fC#include <dynlink/dynlink_impl_type\&.h>\fP
.br
\fC#include <dynlink/dynlink_interface\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "DYNLINK_API const char * \fBdynlink_impl_extension\fP (void)"
.br
.ti -1c
.RI "DYNLINK_API void \fBdynlink_impl_get_name\fP (\fBdynlink_name\fP name, \fBdynlink_name_impl\fP name_impl, size_t size)"
.br
.ti -1c
.RI "DYNLINK_API \fBdynlink_impl\fP \fBdynlink_impl_load\fP (\fBdynlink\fP handle)"
.br
.ti -1c
.RI "DYNLINK_API int \fBdynlink_impl_symbol\fP (\fBdynlink\fP handle, \fBdynlink_impl\fP impl, \fBdynlink_symbol_name\fP symbol_name, \fBdynlink_symbol_addr\fP *symbol_address)"
.br
.ti -1c
.RI "DYNLINK_API void \fBdynlink_impl_unload\fP (\fBdynlink\fP handle, \fBdynlink_impl\fP impl)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "DYNLINK_API const char* dynlink_impl_extension (void)"

.PP
Dynamically linked shared object handle extension implementation\&. 
.PP
\fBReturns\fP
.RS 4
A const string reference to the extension depending on the OS implementation 
.RE
.PP

.SS "DYNLINK_API void dynlink_impl_get_name (\fBdynlink_name\fP name, \fBdynlink_name_impl\fP name_impl, size_t size)"

.PP
Consturct the file name of dynamically linked shared object implementation\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP Name of dynamically linked shared object
.br
\fIname_impl\fP Pointer to the dynamically linked shared object handle
.br
\fIsize\fP Size of string @name_impl 
.RE
.PP

.SS "DYNLINK_API \fBdynlink_impl\fP dynlink_impl_load (\fBdynlink\fP handle)"

.PP
Load a dynamically linked shared object implementation\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP Pointer to the dynamically linked shared object handle
.RE
.PP
\fBReturns\fP
.RS 4
A pointer to the dynamically linked shared object implementation 
.RE
.PP

.SS "DYNLINK_API int dynlink_impl_symbol (\fBdynlink\fP handle, \fBdynlink_impl\fP impl, \fBdynlink_symbol_name\fP symbol_name, \fBdynlink_symbol_addr\fP * symbol_address)"

.PP
Get a symbol address of dynamically linked shared object by name implementation\&. 
.PP
\fBParameters\fP
.RS 4
\fIhandle\fP Handle of dynamically linked shared object
.br
\fIimpl\fP Pointer to the dynamically linked shared object implementation
.br
\fIsymbol_name\fP Name of the of dynamically linked shared object symbol
.br
\fIsymbol_address\fP Pointer to the address of the of dynamically linked shared object symbol
.RE
.PP
\fBReturns\fP
.RS 4
Returns zero on correct dynamic linking, distinct from zero otherwise 
.RE
.PP

.SS "DYNLINK_API void dynlink_impl_unload (\fBdynlink\fP handle, \fBdynlink_impl\fP impl)"

.PP
Unloads a dynamically linked shared object implementation by reference\&. 
.PP
\fBParameters\fP
.RS 4
\fIhandle\fP Handle of dynamically linked shared object
.br
\fIimpl\fP Pointer to the dynamically linked shared object implementation 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

.TH "reflect_class_visibility.h" 3 "Thu Jan 25 2024" "Version 0.7.6.81e303e08d17" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
reflect_class_visibility.h
.SH SYNOPSIS
.br
.PP
\fC#include <reflect/reflect_api\&.h>\fP
.br
\fC#include <reflect/reflect_value\&.h>\fP
.br
\fC#include <preprocessor/preprocessor_concatenation\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCLASS_VISIBILITY_X\fP(X)"
.br
.ti -1c
.RI "#define \fBCLASS_VISIBILITY_ENUM\fP(name,  str,  id)   	\fBPREPROCESSOR_CONCAT\fP(VISIBILITY_, name) = id"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBclass_visibility_id\fP "
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "REFLECT_API const char * \fBclass_visibility_string\fP (enum \fBclass_visibility_id\fP visibility)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBclass_visibility_value\fP (enum \fBclass_visibility_id\fP visibility)"
.br
.ti -1c
.RI "REFLECT_API \fBvalue\fP \fBclass_visibility_value_pair\fP (enum \fBclass_visibility_id\fP visibility)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CLASS_VISIBILITY_X(X)"
\fBValue:\fP
.PP
.nf
    X(PUBLIC, "public", 0), \
        X(PROTECTED, "protected", 1), \
        X(PRIVATE, "private", 2)
.fi
.SS "#define CLASS_VISIBILITY_ENUM(name, str, id)   	\fBPREPROCESSOR_CONCAT\fP(VISIBILITY_, name) = id"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBclass_visibility_id\fP"

.SH "Function Documentation"
.PP 
.SS "REFLECT_API const char* class_visibility_string (enum \fBclass_visibility_id\fP visibility)"

.SS "REFLECT_API \fBvalue\fP class_visibility_value (enum \fBclass_visibility_id\fP visibility)"

.SS "REFLECT_API \fBvalue\fP class_visibility_value_pair (enum \fBclass_visibility_id\fP visibility)"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

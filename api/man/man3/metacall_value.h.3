.TH "metacall_value.h" 3 "Sat Dec 30 2023" "Version 0.7.5.34b28423138e" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
metacall_value.h
.SH SYNOPSIS
.br
.PP
\fC#include <metacall/metacall_api\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBboolean\fP   unsigned char"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmetacall_value_id\fP { \fBMETACALL_BOOL\fP = 0, \fBMETACALL_CHAR\fP = 1, \fBMETACALL_SHORT\fP = 2, \fBMETACALL_INT\fP = 3, \fBMETACALL_LONG\fP = 4, \fBMETACALL_FLOAT\fP = 5, \fBMETACALL_DOUBLE\fP = 6, \fBMETACALL_STRING\fP = 7, \fBMETACALL_BUFFER\fP = 8, \fBMETACALL_ARRAY\fP = 9, \fBMETACALL_MAP\fP = 10, \fBMETACALL_PTR\fP = 11, \fBMETACALL_FUTURE\fP = 12, \fBMETACALL_FUNCTION\fP = 13, \fBMETACALL_NULL\fP = 14, \fBMETACALL_CLASS\fP = 15, \fBMETACALL_OBJECT\fP = 16, \fBMETACALL_EXCEPTION\fP = 17, \fBMETACALL_THROWABLE\fP = 18, \fBMETACALL_SIZE\fP, \fBMETACALL_INVALID\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_bool\fP (\fBboolean\fP b)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_char\fP (char c)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_short\fP (short s)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_int\fP (int i)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_long\fP (long l)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_float\fP (float f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_double\fP (double d)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_string\fP (const char *str, size_t length)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_buffer\fP (const void *buffer, size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_array\fP (const void *values[], size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_map\fP (const void *tuples[], size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_ptr\fP (const void *ptr)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_future\fP (void *f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_function\fP (void *f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_function_closure\fP (void *f, void *c)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_null\fP (void)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_class\fP (void *c)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_object\fP (void *o)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_exception\fP (void *ex)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_create_throwable\fP (void *th)"
.br
.ti -1c
.RI "METACALL_API size_t \fBmetacall_value_size\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API size_t \fBmetacall_value_count\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API enum \fBmetacall_value_id\fP \fBmetacall_value_id\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API const char * \fBmetacall_value_id_name\fP (enum \fBmetacall_value_id\fP id)"
.br
.ti -1c
.RI "METACALL_API const char * \fBmetacall_value_type_name\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_copy\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void \fBmetacall_value_move\fP (void *src, void *dest)"
.br
.ti -1c
.RI "METACALL_API \fBboolean\fP \fBmetacall_value_to_bool\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API char \fBmetacall_value_to_char\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API short \fBmetacall_value_to_short\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API int \fBmetacall_value_to_int\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API long \fBmetacall_value_to_long\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API float \fBmetacall_value_to_float\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API double \fBmetacall_value_to_double\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API char * \fBmetacall_value_to_string\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_buffer\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void ** \fBmetacall_value_to_array\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void ** \fBmetacall_value_to_map\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_ptr\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_future\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_function\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_null\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_class\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_object\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_exception\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_to_throwable\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_bool\fP (void *v, \fBboolean\fP b)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_char\fP (void *v, char c)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_short\fP (void *v, short s)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_int\fP (void *v, int i)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_long\fP (void *v, long l)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_float\fP (void *v, float f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_double\fP (void *v, double d)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_string\fP (void *v, const char *str, size_t length)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_buffer\fP (void *v, const void *buffer, size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_array\fP (void *v, const void *values[], size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_map\fP (void *v, const void *tuples[], size_t size)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_ptr\fP (void *v, const void *ptr)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_future\fP (void *v, void *f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_function\fP (void *v, void *f)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_null\fP (void *v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_class\fP (void *v, void *c)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_object\fP (void *v, void *o)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_exception\fP (void *v, void *ex)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_from_throwable\fP (void *v, void *th)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast\fP (void *v, enum \fBmetacall_value_id\fP id)"
.br
.ti -1c
.RI "METACALL_API \fBboolean\fP \fBmetacall_value_cast_bool\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API char \fBmetacall_value_cast_char\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API short \fBmetacall_value_cast_short\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API int \fBmetacall_value_cast_int\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API long \fBmetacall_value_cast_long\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API float \fBmetacall_value_cast_float\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API double \fBmetacall_value_cast_double\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API char * \fBmetacall_value_cast_string\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_buffer\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void ** \fBmetacall_value_cast_array\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_map\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_ptr\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_future\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_function\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_null\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_class\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_object\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_exception\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void * \fBmetacall_value_cast_throwable\fP (void **v)"
.br
.ti -1c
.RI "METACALL_API void \fBmetacall_value_destroy\fP (void *v)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define boolean   unsigned char"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmetacall_value_id\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMETACALL_BOOL \fP\fP
.TP
\fB\fIMETACALL_CHAR \fP\fP
.TP
\fB\fIMETACALL_SHORT \fP\fP
.TP
\fB\fIMETACALL_INT \fP\fP
.TP
\fB\fIMETACALL_LONG \fP\fP
.TP
\fB\fIMETACALL_FLOAT \fP\fP
.TP
\fB\fIMETACALL_DOUBLE \fP\fP
.TP
\fB\fIMETACALL_STRING \fP\fP
.TP
\fB\fIMETACALL_BUFFER \fP\fP
.TP
\fB\fIMETACALL_ARRAY \fP\fP
.TP
\fB\fIMETACALL_MAP \fP\fP
.TP
\fB\fIMETACALL_PTR \fP\fP
.TP
\fB\fIMETACALL_FUTURE \fP\fP
.TP
\fB\fIMETACALL_FUNCTION \fP\fP
.TP
\fB\fIMETACALL_NULL \fP\fP
.TP
\fB\fIMETACALL_CLASS \fP\fP
.TP
\fB\fIMETACALL_OBJECT \fP\fP
.TP
\fB\fIMETACALL_EXCEPTION \fP\fP
.TP
\fB\fIMETACALL_THROWABLE \fP\fP
.TP
\fB\fIMETACALL_SIZE \fP\fP
.TP
\fB\fIMETACALL_INVALID \fP\fP
.SH "Function Documentation"
.PP 
.SS "METACALL_API void* metacall_value_create_bool (\fBboolean\fP b)"

.PP
Create a value from boolean \fB\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP Boolean will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_char (char c)"

.PP
Create a value from char \fC\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIc\fP Character will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_short (short s)"

.PP
Create a value from short @s\&. 
.PP
\fBParameters\fP
.RS 4
\fIs\fP Short will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_int (int i)"

.PP
Create a value from integer @i\&. 
.PP
\fBParameters\fP
.RS 4
\fIi\fP Integer will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_long (long l)"

.PP
Create a value from long @l\&. 
.PP
\fBParameters\fP
.RS 4
\fIl\fP Long integer will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_float (float f)"

.PP
Create a value from single precision floating point number @f\&. 
.PP
\fBParameters\fP
.RS 4
\fIf\fP Float will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_double (double d)"

.PP
Create a value from double precision floating point number @d\&. 
.PP
\fBParameters\fP
.RS 4
\fId\fP Double will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_string (const char * str, size_t length)"

.PP
Create a value from a C string @str\&. 
.PP
\fBParameters\fP
.RS 4
\fIstr\fP Constant string will be copied into value (needs to be null terminated)
.br
\fIlength\fP Length of the constant string
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_buffer (const void * buffer, size_t size)"

.PP
Create a value buffer from array @buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP Constant memory block will be copied into value array
.br
\fIsize\fP Size in bytes of data contained in the array
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_array (const void * values[], size_t size)"

.PP
Create a value array from array of values @values\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalues\fP Constant array of values will be copied into value list
.br
\fIsize\fP Number of elements contained in the array
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_map (const void * tuples[], size_t size)"

.PP
Create a value map from array of tuples @map\&. 
.PP
\fBParameters\fP
.RS 4
\fItuples\fP Constant array of tuples will be copied into value map
.br
\fIsize\fP Number of elements contained in the map
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_ptr (const void * ptr)"

.PP
Create a value from pointer @ptr\&. 
.PP
\fBParameters\fP
.RS 4
\fIptr\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_future (void * f)"

.PP
Create a value from future @f\&. 
.PP
\fBParameters\fP
.RS 4
\fIf\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_function (void * f)"

.PP
Create a value from function @f\&. 
.PP
\fBParameters\fP
.RS 4
\fIf\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_function_closure (void * f, void * c)"

.PP
Create a value from function @f binding a closure \fCto\fP it\&. 
.PP
\fBParameters\fP
.RS 4
\fIf\fP Pointer to constant data will be copied into value
.br
\fIc\fP Pointer to closure that will be binded into function @f
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_null (void)"

.PP
Create a value of type null\&. 
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_class (void * c)"

.PP
Create a value from class \fC\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIc\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_object (void * o)"

.PP
Create a value from object @o\&. 
.PP
\fBParameters\fP
.RS 4
\fIo\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_exception (void * ex)"

.PP
Create a value from exception @ex\&. 
.PP
\fBParameters\fP
.RS 4
\fIex\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API void* metacall_value_create_throwable (void * th)"

.PP
Create a value from throwable @th\&. 
.PP
\fBParameters\fP
.RS 4
\fIth\fP Pointer to constant data will be copied into value
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to value if success, null otherwhise 
.RE
.PP

.SS "METACALL_API size_t metacall_value_size (void * v)"

.PP
Returns the size of the value\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Size in bytes of the value 
.RE
.PP

.SS "METACALL_API size_t metacall_value_count (void * v)"

.PP
Returns the amount of values this value contains\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Number of values @v represents 
.RE
.PP

.SS "METACALL_API enum \fBmetacall_value_id\fP \fBmetacall_value_id\fP (void * v)"

.PP
Provide type id of value\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Return type id assigned to value 
.RE
.PP

.SS "METACALL_API const char* metacall_value_id_name (enum \fBmetacall_value_id\fP id)"

.PP
Provide type id in a readable form (as string) of a type id\&. 
.PP
\fBParameters\fP
.RS 4
\fIid\fP Value type identifier
.RE
.PP
\fBReturns\fP
.RS 4
Return string related to the type id 
.RE
.PP

.SS "METACALL_API const char* metacall_value_type_name (void * v)"

.PP
Provide type id in a readable form (as string) of value\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Return string related to the type id assigned to value 
.RE
.PP

.SS "METACALL_API void* metacall_value_copy (void * v)"

.PP
Deep copies the value @v, the result copy resets the reference counter and ownership, including the finalizer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value to be copied
.RE
.PP
\fBReturns\fP
.RS 4
Copy of the value @v on success, null otherwhise 
.RE
.PP

.SS "METACALL_API void metacall_value_move (void * src, void * dest)"

.PP
Copies the ownership from @src to @dst, including the finalizer, and resets the owner and finalizer of @src\&. 
.PP
\fBParameters\fP
.RS 4
\fIsrc\fP Source value which will lose the ownership
.br
\fIdst\fP Destination value which will recieve the ownership 
.RE
.PP

.SS "METACALL_API \fBboolean\fP metacall_value_to_bool (void * v)"

.PP
Convert value @v to boolean\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to boolean 
.RE
.PP

.SS "METACALL_API char metacall_value_to_char (void * v)"

.PP
Convert value @v to char\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to char 
.RE
.PP

.SS "METACALL_API short metacall_value_to_short (void * v)"

.PP
Convert value @v to short\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to short 
.RE
.PP

.SS "METACALL_API int metacall_value_to_int (void * v)"

.PP
Convert value @v to integer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to integer 
.RE
.PP

.SS "METACALL_API long metacall_value_to_long (void * v)"

.PP
Convert value @v to long integer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to long integer 
.RE
.PP

.SS "METACALL_API float metacall_value_to_float (void * v)"

.PP
Convert value @v to single precision floating point\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to float 
.RE
.PP

.SS "METACALL_API double metacall_value_to_double (void * v)"

.PP
Convert value @v to double precision floating point\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to dobule 
.RE
.PP

.SS "METACALL_API char* metacall_value_to_string (void * v)"

.PP
Convert value @v to string\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to C string (null terminated) 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_buffer (void * v)"

.PP
Convert value @v to buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to memory block 
.RE
.PP

.SS "METACALL_API void** metacall_value_to_array (void * v)"

.PP
Convert value @v to array of values\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to array of values 
.RE
.PP

.SS "METACALL_API void** metacall_value_to_map (void * v)"

.PP
Convert value @v to map\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to map (array of tuples (array of values)) 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_ptr (void * v)"

.PP
Convert value @v to pointer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to pointer 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_future (void * v)"

.PP
Convert value @v to future\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to future 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_function (void * v)"

.PP
Convert value @v to function\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to function 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_null (void * v)"

.PP
Convert value @v to null\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to null 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_class (void * v)"

.PP
Convert value @v to class\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to class 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_object (void * v)"

.PP
Convert value @v to object\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to object 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_exception (void * v)"

.PP
Convert value @v to exception\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to exception 
.RE
.PP

.SS "METACALL_API void* metacall_value_to_throwable (void * v)"

.PP
Convert value @v to throwable\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to throwable 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_bool (void * v, \fBboolean\fP b)"

.PP
Assign boolean \fBto\fP value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIb\fP Boolean to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with boolean \fBassigned\fP to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_char (void * v, char c)"

.PP
Assign character \fCto\fP value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIc\fP Character to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with char \fCassigned\fP to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_short (void * v, short s)"

.PP
Assign short @s to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIs\fP Short to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with short @s assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_int (void * v, int i)"

.PP
Assign integer @i to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIi\fP Integer to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with integer @i assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_long (void * v, long l)"

.PP
Assign long integer @l to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIl\fP Long integer to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with long @l assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_float (void * v, float f)"

.PP
Assign single precision floating point @f to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIf\fP Float to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with float @f assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_double (void * v, double d)"

.PP
Assign double precision floating point @d to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fId\fP Double to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with double @d assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_string (void * v, const char * str, size_t length)"

.PP
Assign string @str to value @v, truncates to @v size if it is smaller than @length + 1\&. It does not add null terminator if truncated\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIstr\fP Constant string to be assigned to value @v (it needs to be null terminated)
.br
\fIlength\fP Length of the constant string @str
.RE
.PP
\fBReturns\fP
.RS 4
Value with string @str assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_buffer (void * v, const void * buffer, size_t size)"

.PP
Assign array @buffer to value buffer @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIbuffer\fP Constant array to be assigned to value @v
.br
\fIsize\fP Number of elements contained in @buffer
.RE
.PP
\fBReturns\fP
.RS 4
Value with array @buffer assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_array (void * v, const void * values[], size_t size)"

.PP
Assign array of values @values to value array @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIvalues\fP Constant array of values to be assigned to value array @v
.br
\fIsize\fP Number of values contained in constant array @values
.RE
.PP
\fBReturns\fP
.RS 4
Value with array of values @values assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_map (void * v, const void * tuples[], size_t size)"

.PP
Assign array of values @values to value map @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fItuples\fP Constant array of tuples to be assigned to value map @v
.br
\fIsize\fP Number of values contained in constant array @tuples
.RE
.PP
\fBReturns\fP
.RS 4
Value with array of tuples @tuples assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_ptr (void * v, const void * ptr)"

.PP
Assign pointer reference @ptr to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIptr\fP Pointer to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with pointer @ptr assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_future (void * v, void * f)"

.PP
Assign future @f to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIf\fP Future to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with future @f assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_function (void * v, void * f)"

.PP
Assign function @f to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIf\fP Function to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with function @f assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_null (void * v)"

.PP
Assign null to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.RE
.PP
\fBReturns\fP
.RS 4
Value with null assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_class (void * v, void * c)"

.PP
Assign class \fCto\fP value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIc\fP Class to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with class \fCassigned\fP to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_object (void * v, void * o)"

.PP
Assign object @o to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIo\fP Object to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with object @o assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_exception (void * v, void * ex)"

.PP
Assign exception @ex to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIex\fP Exception to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with exception @ex assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_from_throwable (void * v, void * th)"

.PP
Assign throwable @th to value @v\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIth\fP Throwable to be assigned to value @v
.RE
.PP
\fBReturns\fP
.RS 4
Value with throwable @th assigned to it 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast (void * v, enum \fBmetacall_value_id\fP id)"

.PP
Casts a value to a new type @id\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value
.br
\fIid\fP New type id of value to be casted
.RE
.PP
\fBReturns\fP
.RS 4
Casted value or reference to @v if casting is between equivalent types 
.RE
.PP

.SS "METACALL_API \fBboolean\fP metacall_value_cast_bool (void ** v)"

.PP
Convert value @v implicitly to boolean\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to boolean 
.RE
.PP

.SS "METACALL_API char metacall_value_cast_char (void ** v)"

.PP
Convert value @v implicitly to char\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to char 
.RE
.PP

.SS "METACALL_API short metacall_value_cast_short (void ** v)"

.PP
Convert value @v implicitly to short\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to short 
.RE
.PP

.SS "METACALL_API int metacall_value_cast_int (void ** v)"

.PP
Convert value @v implicitly to int\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to int 
.RE
.PP

.SS "METACALL_API long metacall_value_cast_long (void ** v)"

.PP
Convert value @v implicitly to long\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to long 
.RE
.PP

.SS "METACALL_API float metacall_value_cast_float (void ** v)"

.PP
Convert value @v implicitly to float\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to float 
.RE
.PP

.SS "METACALL_API double metacall_value_cast_double (void ** v)"

.PP
Convert value @v implicitly to double\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to double 
.RE
.PP

.SS "METACALL_API char* metacall_value_cast_string (void ** v)"

.PP
Convert value @v implicitly to string\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to a C string (null terminated) 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_buffer (void ** v)"

.PP
Convert value @v implicitly to buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to buffer 
.RE
.PP

.SS "METACALL_API void** metacall_value_cast_array (void ** v)"

.PP
Convert value @v implicitly to array\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to array of values 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_map (void ** v)"

.PP
Convert value @v implicitly to map\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to map 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_ptr (void ** v)"

.PP
Convert value @v implicitly to ptr\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to ptr 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_future (void ** v)"

.PP
Convert value @v implicitly to future\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to future 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_function (void ** v)"

.PP
Convert value @v implicitly to function\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to function 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_null (void ** v)"

.PP
Convert value @v implicitly to null\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to null 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_class (void ** v)"

.PP
Convert value @v implicitly to class\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to class 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_object (void ** v)"

.PP
Convert value @v implicitly to object\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to object 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_exception (void ** v)"

.PP
Convert value @v implicitly to exception\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to exception 
.RE
.PP

.SS "METACALL_API void* metacall_value_cast_throwable (void ** v)"

.PP
Convert value @v implicitly to throwable\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the reference of the value
.RE
.PP
\fBReturns\fP
.RS 4
Value converted to throwable 
.RE
.PP

.SS "METACALL_API void metacall_value_destroy (void * v)"

.PP
Destroy a value from scope stack\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP Reference to the value 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

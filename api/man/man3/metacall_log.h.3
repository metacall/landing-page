.TH "metacall_log.h" 3 "Sat Dec 30 2023" "Version 0.7.5.34b28423138e" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
metacall_log.h
.SH SYNOPSIS
.br
.PP
\fC#include <metacall/metacall_api\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBmetacall_log_stdio\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_file\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_socket\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_syslog\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_nginx\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_custom_va_list\fP"
.br
.ti -1c
.RI "struct \fBmetacall_log_custom\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmetacall_log_id\fP { \fBMETACALL_LOG_STDIO\fP, \fBMETACALL_LOG_FILE\fP, \fBMETACALL_LOG_SOCKET\fP, \fBMETACALL_LOG_SYSLOG\fP, \fBMETACALL_LOG_NGINX\fP, \fBMETACALL_LOG_CUSTOM\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "METACALL_API int \fBmetacall_log\fP (enum \fBmetacall_log_id\fP log_id, void *ctx)"
.br
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmetacall_log_id\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMETACALL_LOG_STDIO \fP\fP
.TP
\fB\fIMETACALL_LOG_FILE \fP\fP
.TP
\fB\fIMETACALL_LOG_SOCKET \fP\fP
.TP
\fB\fIMETACALL_LOG_SYSLOG \fP\fP
.TP
\fB\fIMETACALL_LOG_NGINX \fP\fP
.TP
\fB\fIMETACALL_LOG_CUSTOM \fP\fP
.SH "Function Documentation"
.PP 
.SS "METACALL_API int metacall_log (enum \fBmetacall_log_id\fP log_id, void * ctx)"

.PP
Create a log instance\&. 
.PP
\fBParameters\fP
.RS 4
\fIlog_id\fP Type of log to be created
.br
\fIctx\fP Context of the log (a pointer to metacall_log_{stdio, file, socket, syslog, nginx, custom}_type)
.RE
.PP
\fBReturns\fP
.RS 4
Zero if success, different from zero otherwise 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.

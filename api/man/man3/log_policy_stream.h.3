.TH "log_policy_stream.h" 3 "Thu Feb 8 2024" "Version 0.7.7.251ee5582288" "MetaCall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log_policy_stream.h
.SH SYNOPSIS
.br
.PP
\fC#include <log/log_api\&.h>\fP
.br
\fC#include <log/log_policy\&.h>\fP
.br
\fC#include <log/log_policy_stream_custom\&.h>\fP
.br
\fC#include <log/log_policy_stream_file\&.h>\fP
.br
\fC#include <log/log_policy_stream_nginx\&.h>\fP
.br
\fC#include <log/log_policy_stream_socket\&.h>\fP
.br
\fC#include <log/log_policy_stream_stdio\&.h>\fP
.br
\fC#include <log/log_policy_stream_syslog\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBlog_policy_stream_impl\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int(* \fBlog_policy_stream_write\fP) (\fBlog_policy\fP, const void *, const size_t)"
.br
.ti -1c
.RI "typedef int(* \fBlog_policy_stream_flush\fP) (\fBlog_policy\fP)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBlog_policy_stream_id\fP { \fBLOG_POLICY_STREAM_FILE\fP = 0x00, \fBLOG_POLICY_STREAM_NGINX\fP = 0x01, \fBLOG_POLICY_STREAM_SOCKET\fP = 0x02, \fBLOG_POLICY_STREAM_STDIO\fP = 0x03, \fBLOG_POLICY_STREAM_SYSLOG\fP = 0x04, \fBLOG_POLICY_STREAM_CUSTOM\fP = 0x05, \fBLOG_POLICY_STREAM_SIZE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "LOG_API log_policy_interface \fBlog_policy_stream\fP (const \fBlog_policy_id\fP policy_stream_id)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_file\fP (const char *file_name, const char *mode)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_nginx\fP (\fBngx_log_t\fP *ngx_log_ptr, void(*ngx_error_ptr)(void), uint16_t ngx_log_level)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_socket\fP (const char *ip, uint16_t port)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_stdio\fP (FILE *stream)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_syslog\fP (const char *name)"
.br
.ti -1c
.RI "LOG_API \fBlog_policy\fP \fBlog_policy_stream_custom\fP (void *\fBcontext\fP, int(*stream_write)(void *, const char *, const size_t), int(*stream_flush)(void *))"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef int(* log_policy_stream_write) (\fBlog_policy\fP, const void *, const size_t)"

.SS "typedef int(* log_policy_stream_flush) (\fBlog_policy\fP)"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBlog_policy_stream_id\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILOG_POLICY_STREAM_FILE \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_NGINX \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_SOCKET \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_STDIO \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_SYSLOG \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_CUSTOM \fP\fP
.TP
\fB\fILOG_POLICY_STREAM_SIZE \fP\fP
.SH "Function Documentation"
.PP 
.SS "LOG_API log_policy_interface log_policy_stream (const \fBlog_policy_id\fP policy_stream_id)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_file (const char * file_name, const char * mode)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_nginx (\fBngx_log_t\fP * ngx_log_ptr, void(*)(void) ngx_error_ptr, uint16_t ngx_log_level)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_socket (const char * ip, uint16_t port)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_stdio (FILE * stream)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_syslog (const char * name)"

.SS "LOG_API \fBlog_policy\fP log_policy_stream_custom (void * context, int(*)(void *, const char *, const size_t) stream_write, int(*)(void *) stream_flush)"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetaCall from the source code\&.
